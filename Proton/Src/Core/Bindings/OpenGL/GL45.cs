using System;

namespace Proton
{
	static class GL45
	{
		#region Constants
		public const uint GL_CONTEXT_LOST = 1287;
		public const uint GL_NEGATIVE_ONE_TO_ONE = 37726;
		public const uint GL_ZERO_TO_ONE = 37727;
		public const uint GL_CLIP_ORIGIN = 37724;
		public const uint GL_CLIP_DEPTH_MODE = 37725;
		public const uint GL_QUERY_WAIT_INVERTED = 36375;
		public const uint GL_QUERY_NO_WAIT_INVERTED = 36376;
		public const uint GL_QUERY_BY_REGION_WAIT_INVERTED = 36377;
		public const uint GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 36378;
		public const uint GL_MAX_CULL_DISTANCES = 33529;
		public const uint GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 33530;
		public const uint GL_TEXTURE_TARGET = 4102;
		public const uint GL_QUERY_TARGET = 33514;
		public const uint GL_GUILTY_CONTEXT_RESET = 33363;
		public const uint GL_INNOCENT_CONTEXT_RESET = 33364;
		public const uint GL_UNKNOWN_CONTEXT_RESET = 33365;
		public const uint GL_RESET_NOTIFICATION_STRATEGY = 33366;
		public const uint GL_LOSE_CONTEXT_ON_RESET = 33362;
		public const uint GL_NO_RESET_NOTIFICATION = 33377;
		public const int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 4;
		public const uint GL_CONTEXT_RELEASE_BEHAVIOR = 33531;
		public const uint GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 33532;
		#endregion

		#region Delegates
		public delegate void PFNGLCLIPCONTROLPROC(uint origin, uint depth);
		public delegate void PFNGLCREATETRANSFORMFEEDBACKSPROC(int n, ref uint ids);
		public delegate void PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC(uint xfb, uint index, uint buffer);
		public delegate void PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC(uint xfb, uint index, uint buffer, int offset, int size);
		public delegate void PFNGLGETTRANSFORMFEEDBACKIVPROC(uint xfb, uint pname, ref int param);
		public delegate void PFNGLGETTRANSFORMFEEDBACKI_VPROC(uint xfb, uint pname, uint index, ref int param);
		public delegate void PFNGLGETTRANSFORMFEEDBACKI64_VPROC(uint xfb, uint pname, uint index, ref int param);
		public delegate void PFNGLCREATEBUFFERSPROC(int n, ref uint buffers);
		public delegate void PFNGLNAMEDBUFFERSTORAGEPROC(uint buffer, int size, IntPtr data, uint flags);
		public delegate void PFNGLNAMEDBUFFERDATAPROC(uint buffer, int size, IntPtr data, uint usage);
		public delegate void PFNGLNAMEDBUFFERSUBDATAPROC(uint buffer, int offset, int size, IntPtr data);
		public delegate void PFNGLCOPYNAMEDBUFFERSUBDATAPROC(uint readBuffer, uint writeBuffer, int readOffset, int writeOffset, int size);
		public delegate void PFNGLCLEARNAMEDBUFFERDATAPROC(uint buffer, uint internalformat, uint format, uint type, IntPtr data);
		public delegate void PFNGLCLEARNAMEDBUFFERSUBDATAPROC(uint buffer, uint internalformat, int offset, int size, uint format, uint type, IntPtr data);
		public delegate IntPtr PFNGLMAPNAMEDBUFFERPROC(uint buffer, uint access);
		public delegate IntPtr PFNGLMAPNAMEDBUFFERRANGEPROC(uint buffer, int offset, int length, uint access);
		public delegate byte PFNGLUNMAPNAMEDBUFFERPROC(uint buffer);
		public delegate void PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC(uint buffer, int offset, int length);
		public delegate void PFNGLGETNAMEDBUFFERPARAMETERIVPROC(uint buffer, uint pname, ref int parameters);
		public delegate void PFNGLGETNAMEDBUFFERPARAMETERI64VPROC(uint buffer, uint pname, ref int parameters);
		public delegate void PFNGLGETNAMEDBUFFERPOINTERVPROC(uint buffer, uint pname, ref IntPtr parameters);
		public delegate void PFNGLGETNAMEDBUFFERSUBDATAPROC(uint buffer, int offset, int size, IntPtr data);
		public delegate void PFNGLCREATEFRAMEBUFFERSPROC(int n, ref uint framebuffers);
		public delegate void PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC(uint framebuffer, uint attachment, uint renderbuffertarget, uint renderbuffer);
		public delegate void PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC(uint framebuffer, uint pname, int param);
		public delegate void PFNGLNAMEDFRAMEBUFFERTEXTUREPROC(uint framebuffer, uint attachment, uint texture, int level);
		public delegate void PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC(uint framebuffer, uint attachment, uint texture, int level, int layer);
		public delegate void PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC(uint framebuffer, uint buf);
		public delegate void PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC(uint framebuffer, int n, ref uint bufs);
		public delegate void PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC(uint framebuffer, uint src);
		public delegate void PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC(uint framebuffer, int numAttachments, ref uint attachments);
		public delegate void PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC(uint framebuffer, int numAttachments, ref uint attachments, int x, int y, int width, int height);
		public delegate void PFNGLCLEARNAMEDFRAMEBUFFERIVPROC(uint framebuffer, uint buffer, int drawbuffer, ref int value);
		public delegate void PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC(uint framebuffer, uint buffer, int drawbuffer, ref uint value);
		public delegate void PFNGLCLEARNAMEDFRAMEBUFFERFVPROC(uint framebuffer, uint buffer, int drawbuffer, ref float value);
		public delegate void PFNGLCLEARNAMEDFRAMEBUFFERFIPROC(uint framebuffer, uint buffer, int drawbuffer, float depth, int stencil);
		public delegate void PFNGLBLITNAMEDFRAMEBUFFERPROC(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
		public delegate uint PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC(uint framebuffer, uint target);
		public delegate void PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC(uint framebuffer, uint pname, ref int param);
		public delegate void PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC(uint framebuffer, uint attachment, uint pname, ref int parameters);
		public delegate void PFNGLCREATERENDERBUFFERSPROC(int n, ref uint renderbuffers);
		public delegate void PFNGLNAMEDRENDERBUFFERSTORAGEPROC(uint renderbuffer, uint internalformat, int width, int height);
		public delegate void PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC(uint renderbuffer, int samples, uint internalformat, int width, int height);
		public delegate void PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC(uint renderbuffer, uint pname, ref int parameters);
		public delegate void PFNGLCREATETEXTURESPROC(uint target, int n, ref uint textures);
		public delegate void PFNGLTEXTUREBUFFERPROC(uint texture, uint internalformat, uint buffer);
		public delegate void PFNGLTEXTUREBUFFERRANGEPROC(uint texture, uint internalformat, uint buffer, int offset, int size);
		public delegate void PFNGLTEXTURESTORAGE1DPROC(uint texture, int levels, uint internalformat, int width);
		public delegate void PFNGLTEXTURESTORAGE2DPROC(uint texture, int levels, uint internalformat, int width, int height);
		public delegate void PFNGLTEXTURESTORAGE3DPROC(uint texture, int levels, uint internalformat, int width, int height, int depth);
		public delegate void PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC(uint texture, int samples, uint internalformat, int width, int height, byte fixedsamplelocations);
		public delegate void PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC(uint texture, int samples, uint internalformat, int width, int height, int depth, byte fixedsamplelocations);
		public delegate void PFNGLTEXTURESUBIMAGE1DPROC(uint texture, int level, int xoffset, int width, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTEXTURESUBIMAGE2DPROC(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTEXTURESUBIMAGE3DPROC(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC(uint texture, int level, int xoffset, int width, uint format, int imageSize, IntPtr data);
		public delegate void PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, IntPtr data);
		public delegate void PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, IntPtr data);
		public delegate void PFNGLCOPYTEXTURESUBIMAGE1DPROC(uint texture, int level, int xoffset, int x, int y, int width);
		public delegate void PFNGLCOPYTEXTURESUBIMAGE2DPROC(uint texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		public delegate void PFNGLCOPYTEXTURESUBIMAGE3DPROC(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		public delegate void PFNGLTEXTUREPARAMETERFPROC(uint texture, uint pname, float param);
		public delegate void PFNGLTEXTUREPARAMETERFVPROC(uint texture, uint pname, ref float param);
		public delegate void PFNGLTEXTUREPARAMETERIPROC(uint texture, uint pname, int param);
		public delegate void PFNGLTEXTUREPARAMETERIIVPROC(uint texture, uint pname, ref int parameters);
		public delegate void PFNGLTEXTUREPARAMETERIUIVPROC(uint texture, uint pname, ref uint parameters);
		public delegate void PFNGLTEXTUREPARAMETERIVPROC(uint texture, uint pname, ref int param);
		public delegate void PFNGLGENERATETEXTUREMIPMAPPROC(uint texture);
		public delegate void PFNGLBINDTEXTUREUNITPROC(uint unit, uint texture);
		public delegate void PFNGLGETTEXTUREIMAGEPROC(uint texture, int level, uint format, uint type, int bufSize, IntPtr pixels);
		public delegate void PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC(uint texture, int level, int bufSize, IntPtr pixels);
		public delegate void PFNGLGETTEXTURELEVELPARAMETERFVPROC(uint texture, int level, uint pname, ref float parameters);
		public delegate void PFNGLGETTEXTURELEVELPARAMETERIVPROC(uint texture, int level, uint pname, ref int parameters);
		public delegate void PFNGLGETTEXTUREPARAMETERFVPROC(uint texture, uint pname, ref float parameters);
		public delegate void PFNGLGETTEXTUREPARAMETERIIVPROC(uint texture, uint pname, ref int parameters);
		public delegate void PFNGLGETTEXTUREPARAMETERIUIVPROC(uint texture, uint pname, ref uint parameters);
		public delegate void PFNGLGETTEXTUREPARAMETERIVPROC(uint texture, uint pname, ref int parameters);
		public delegate void PFNGLCREATEVERTEXARRAYSPROC(int n, ref uint arrays);
		public delegate void PFNGLDISABLEVERTEXARRAYATTRIBPROC(uint vaobj, uint index);
		public delegate void PFNGLENABLEVERTEXARRAYATTRIBPROC(uint vaobj, uint index);
		public delegate void PFNGLVERTEXARRAYELEMENTBUFFERPROC(uint vaobj, uint buffer);
		public delegate void PFNGLVERTEXARRAYVERTEXBUFFERPROC(uint vaobj, uint bindingindex, uint buffer, int offset, int stride);
		public delegate void PFNGLVERTEXARRAYVERTEXBUFFERSPROC(uint vaobj, uint first, int count, ref uint buffers, ref int offsets, ref int strides);
		public delegate void PFNGLVERTEXARRAYATTRIBBINDINGPROC(uint vaobj, uint attribindex, uint bindingindex);
		public delegate void PFNGLVERTEXARRAYATTRIBFORMATPROC(uint vaobj, uint attribindex, int size, uint type, byte normalized, uint relativeoffset);
		public delegate void PFNGLVERTEXARRAYATTRIBIFORMATPROC(uint vaobj, uint attribindex, int size, uint type, uint relativeoffset);
		public delegate void PFNGLVERTEXARRAYATTRIBLFORMATPROC(uint vaobj, uint attribindex, int size, uint type, uint relativeoffset);
		public delegate void PFNGLVERTEXARRAYBINDINGDIVISORPROC(uint vaobj, uint bindingindex, uint divisor);
		public delegate void PFNGLGETVERTEXARRAYIVPROC(uint vaobj, uint pname, ref int param);
		public delegate void PFNGLGETVERTEXARRAYINDEXEDIVPROC(uint vaobj, uint index, uint pname, ref int param);
		public delegate void PFNGLGETVERTEXARRAYINDEXED64IVPROC(uint vaobj, uint index, uint pname, ref int param);
		public delegate void PFNGLCREATESAMPLERSPROC(int n, ref uint samplers);
		public delegate void PFNGLCREATEPROGRAMPIPELINESPROC(int n, ref uint pipelines);
		public delegate void PFNGLCREATEQUERIESPROC(uint target, int n, ref uint ids);
		public delegate void PFNGLGETQUERYBUFFEROBJECTI64VPROC(uint id, uint buffer, uint pname, int offset);
		public delegate void PFNGLGETQUERYBUFFEROBJECTIVPROC(uint id, uint buffer, uint pname, int offset);
		public delegate void PFNGLGETQUERYBUFFEROBJECTUI64VPROC(uint id, uint buffer, uint pname, int offset);
		public delegate void PFNGLGETQUERYBUFFEROBJECTUIVPROC(uint id, uint buffer, uint pname, int offset);
		public delegate void PFNGLMEMORYBARRIERBYREGIONPROC(uint barriers);
		public delegate void PFNGLGETTEXTURESUBIMAGEPROC(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, int bufSize, IntPtr pixels);
		public delegate void PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, IntPtr pixels);
		public delegate uint PFNGLGETGRAPHICSRESETSTATUSPROC();
		public delegate void PFNGLGETNCOMPRESSEDTEXIMAGEPROC(uint target, int lod, int bufSize, IntPtr pixels);
		public delegate void PFNGLGETNTEXIMAGEPROC(uint target, int level, uint format, uint type, int bufSize, IntPtr pixels);
		public delegate void PFNGLGETNUNIFORMDVPROC(uint program, int location, int bufSize, ref double parameters);
		public delegate void PFNGLGETNUNIFORMFVPROC(uint program, int location, int bufSize, ref float parameters);
		public delegate void PFNGLGETNUNIFORMIVPROC(uint program, int location, int bufSize, ref int parameters);
		public delegate void PFNGLGETNUNIFORMUIVPROC(uint program, int location, int bufSize, ref uint parameters);
		public delegate void PFNGLREADNPIXELSPROC(int x, int y, int width, int height, uint format, uint type, int bufSize, IntPtr data);
		public delegate void PFNGLTEXTUREBARRIERPROC();
		#endregion

		#region Methods
		public static PFNGLCLIPCONTROLPROC glClipControl;
		public static PFNGLCREATETRANSFORMFEEDBACKSPROC glCreateTransformFeedbacks;
		public static PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glTransformFeedbackBufferBase;
		public static PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glTransformFeedbackBufferRange;
		public static PFNGLGETTRANSFORMFEEDBACKIVPROC glGetTransformFeedbackiv;
		public static PFNGLGETTRANSFORMFEEDBACKI_VPROC glGetTransformFeedbacki_v;
		public static PFNGLGETTRANSFORMFEEDBACKI64_VPROC glGetTransformFeedbacki64_v;
		public static PFNGLCREATEBUFFERSPROC glCreateBuffers;
		public static PFNGLNAMEDBUFFERSTORAGEPROC glNamedBufferStorage;
		public static PFNGLNAMEDBUFFERDATAPROC glNamedBufferData;
		public static PFNGLNAMEDBUFFERSUBDATAPROC glNamedBufferSubData;
		public static PFNGLCOPYNAMEDBUFFERSUBDATAPROC glCopyNamedBufferSubData;
		public static PFNGLCLEARNAMEDBUFFERDATAPROC glClearNamedBufferData;
		public static PFNGLCLEARNAMEDBUFFERSUBDATAPROC glClearNamedBufferSubData;
		public static PFNGLMAPNAMEDBUFFERPROC glMapNamedBuffer;
		public static PFNGLMAPNAMEDBUFFERRANGEPROC glMapNamedBufferRange;
		public static PFNGLUNMAPNAMEDBUFFERPROC glUnmapNamedBuffer;
		public static PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glFlushMappedNamedBufferRange;
		public static PFNGLGETNAMEDBUFFERPARAMETERIVPROC glGetNamedBufferParameteriv;
		public static PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glGetNamedBufferParameteri64v;
		public static PFNGLGETNAMEDBUFFERPOINTERVPROC glGetNamedBufferPointerv;
		public static PFNGLGETNAMEDBUFFERSUBDATAPROC glGetNamedBufferSubData;
		public static PFNGLCREATEFRAMEBUFFERSPROC glCreateFramebuffers;
		public static PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glNamedFramebufferRenderbuffer;
		public static PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glNamedFramebufferParameteri;
		public static PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glNamedFramebufferTexture;
		public static PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glNamedFramebufferTextureLayer;
		public static PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glNamedFramebufferDrawBuffer;
		public static PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glNamedFramebufferDrawBuffers;
		public static PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glNamedFramebufferReadBuffer;
		public static PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glInvalidateNamedFramebufferData;
		public static PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glInvalidateNamedFramebufferSubData;
		public static PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glClearNamedFramebufferiv;
		public static PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glClearNamedFramebufferuiv;
		public static PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glClearNamedFramebufferfv;
		public static PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glClearNamedFramebufferfi;
		public static PFNGLBLITNAMEDFRAMEBUFFERPROC glBlitNamedFramebuffer;
		public static PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glCheckNamedFramebufferStatus;
		public static PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glGetNamedFramebufferParameteriv;
		public static PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetNamedFramebufferAttachmentParameteriv;
		public static PFNGLCREATERENDERBUFFERSPROC glCreateRenderbuffers;
		public static PFNGLNAMEDRENDERBUFFERSTORAGEPROC glNamedRenderbufferStorage;
		public static PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glNamedRenderbufferStorageMultisample;
		public static PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glGetNamedRenderbufferParameteriv;
		public static PFNGLCREATETEXTURESPROC glCreateTextures;
		public static PFNGLTEXTUREBUFFERPROC glTextureBuffer;
		public static PFNGLTEXTUREBUFFERRANGEPROC glTextureBufferRange;
		public static PFNGLTEXTURESTORAGE1DPROC glTextureStorage1D;
		public static PFNGLTEXTURESTORAGE2DPROC glTextureStorage2D;
		public static PFNGLTEXTURESTORAGE3DPROC glTextureStorage3D;
		public static PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glTextureStorage2DMultisample;
		public static PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glTextureStorage3DMultisample;
		public static PFNGLTEXTURESUBIMAGE1DPROC glTextureSubImage1D;
		public static PFNGLTEXTURESUBIMAGE2DPROC glTextureSubImage2D;
		public static PFNGLTEXTURESUBIMAGE3DPROC glTextureSubImage3D;
		public static PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glCompressedTextureSubImage1D;
		public static PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glCompressedTextureSubImage2D;
		public static PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glCompressedTextureSubImage3D;
		public static PFNGLCOPYTEXTURESUBIMAGE1DPROC glCopyTextureSubImage1D;
		public static PFNGLCOPYTEXTURESUBIMAGE2DPROC glCopyTextureSubImage2D;
		public static PFNGLCOPYTEXTURESUBIMAGE3DPROC glCopyTextureSubImage3D;
		public static PFNGLTEXTUREPARAMETERFPROC glTextureParameterf;
		public static PFNGLTEXTUREPARAMETERFVPROC glTextureParameterfv;
		public static PFNGLTEXTUREPARAMETERIPROC glTextureParameteri;
		public static PFNGLTEXTUREPARAMETERIIVPROC glTextureParameterIiv;
		public static PFNGLTEXTUREPARAMETERIUIVPROC glTextureParameterIuiv;
		public static PFNGLTEXTUREPARAMETERIVPROC glTextureParameteriv;
		public static PFNGLGENERATETEXTUREMIPMAPPROC glGenerateTextureMipmap;
		public static PFNGLBINDTEXTUREUNITPROC glBindTextureUnit;
		public static PFNGLGETTEXTUREIMAGEPROC glGetTextureImage;
		public static PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glGetCompressedTextureImage;
		public static PFNGLGETTEXTURELEVELPARAMETERFVPROC glGetTextureLevelParameterfv;
		public static PFNGLGETTEXTURELEVELPARAMETERIVPROC glGetTextureLevelParameteriv;
		public static PFNGLGETTEXTUREPARAMETERFVPROC glGetTextureParameterfv;
		public static PFNGLGETTEXTUREPARAMETERIIVPROC glGetTextureParameterIiv;
		public static PFNGLGETTEXTUREPARAMETERIUIVPROC glGetTextureParameterIuiv;
		public static PFNGLGETTEXTUREPARAMETERIVPROC glGetTextureParameteriv;
		public static PFNGLCREATEVERTEXARRAYSPROC glCreateVertexArrays;
		public static PFNGLDISABLEVERTEXARRAYATTRIBPROC glDisableVertexArrayAttrib;
		public static PFNGLENABLEVERTEXARRAYATTRIBPROC glEnableVertexArrayAttrib;
		public static PFNGLVERTEXARRAYELEMENTBUFFERPROC glVertexArrayElementBuffer;
		public static PFNGLVERTEXARRAYVERTEXBUFFERPROC glVertexArrayVertexBuffer;
		public static PFNGLVERTEXARRAYVERTEXBUFFERSPROC glVertexArrayVertexBuffers;
		public static PFNGLVERTEXARRAYATTRIBBINDINGPROC glVertexArrayAttribBinding;
		public static PFNGLVERTEXARRAYATTRIBFORMATPROC glVertexArrayAttribFormat;
		public static PFNGLVERTEXARRAYATTRIBIFORMATPROC glVertexArrayAttribIFormat;
		public static PFNGLVERTEXARRAYATTRIBLFORMATPROC glVertexArrayAttribLFormat;
		public static PFNGLVERTEXARRAYBINDINGDIVISORPROC glVertexArrayBindingDivisor;
		public static PFNGLGETVERTEXARRAYIVPROC glGetVertexArrayiv;
		public static PFNGLGETVERTEXARRAYINDEXEDIVPROC glGetVertexArrayIndexediv;
		public static PFNGLGETVERTEXARRAYINDEXED64IVPROC glGetVertexArrayIndexed64iv;
		public static PFNGLCREATESAMPLERSPROC glCreateSamplers;
		public static PFNGLCREATEPROGRAMPIPELINESPROC glCreateProgramPipelines;
		public static PFNGLCREATEQUERIESPROC glCreateQueries;
		public static PFNGLGETQUERYBUFFEROBJECTI64VPROC glGetQueryBufferObjecti64v;
		public static PFNGLGETQUERYBUFFEROBJECTIVPROC glGetQueryBufferObjectiv;
		public static PFNGLGETQUERYBUFFEROBJECTUI64VPROC glGetQueryBufferObjectui64v;
		public static PFNGLGETQUERYBUFFEROBJECTUIVPROC glGetQueryBufferObjectuiv;
		public static PFNGLMEMORYBARRIERBYREGIONPROC glMemoryBarrierByRegion;
		public static PFNGLGETTEXTURESUBIMAGEPROC glGetTextureSubImage;
		public static PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glGetCompressedTextureSubImage;
		public static PFNGLGETGRAPHICSRESETSTATUSPROC glGetGraphicsResetStatus;
		public static PFNGLGETNCOMPRESSEDTEXIMAGEPROC glGetnCompressedTexImage;
		public static PFNGLGETNTEXIMAGEPROC glGetnTexImage;
		public static PFNGLGETNUNIFORMDVPROC glGetnUniformdv;
		public static PFNGLGETNUNIFORMFVPROC glGetnUniformfv;
		public static PFNGLGETNUNIFORMIVPROC glGetnUniformiv;
		public static PFNGLGETNUNIFORMUIVPROC glGetnUniformuiv;
		public static PFNGLREADNPIXELSPROC glReadnPixels;
		public static PFNGLTEXTUREBARRIERPROC glTextureBarrier;
		#endregion
	}
}
