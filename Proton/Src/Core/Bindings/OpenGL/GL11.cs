using System;
using System.Runtime.InteropServices;

namespace Proton
{
	static class GL11
	{
		#region Constants
		public const uint GL_ACCUM = 256;
		public const uint GL_LOAD = 257;
		public const uint GL_RETURN = 258;
		public const uint GL_MULT = 259;
		public const uint GL_ADD = 260;
		public const uint GL_NEVER = 512;
		public const uint GL_LESS = 513;
		public const uint GL_EQUAL = 514;
		public const uint GL_LEQUAL = 515;
		public const uint GL_GREATER = 516;
		public const uint GL_NOTEQUAL = 517;
		public const uint GL_GEQUAL = 518;
		public const uint GL_ALWAYS = 519;
		public const int GL_CURRENT_BIT = 1;
		public const int GL_POINT_BIT = 2;
		public const int GL_LINE_BIT = 4;
		public const int GL_POLYGON_BIT = 8;
		public const int GL_POLYGON_STIPPLE_BIT = 16;
		public const int GL_PIXEL_MODE_BIT = 32;
		public const int GL_LIGHTING_BIT = 64;
		public const int GL_FOG_BIT = 128;
		public const int GL_DEPTH_BUFFER_BIT = 256;
		public const int GL_ACCUM_BUFFER_BIT = 512;
		public const int GL_STENCIL_BUFFER_BIT = 1024;
		public const int GL_VIEWPORT_BIT = 2048;
		public const int GL_TRANSFORM_BIT = 4096;
		public const int GL_ENABLE_BIT = 8192;
		public const int GL_COLOR_BUFFER_BIT = 16384;
		public const int GL_HINT_BIT = 32768;
		public const int GL_EVAL_BIT = 65536;
		public const int GL_LIST_BIT = 131072;
		public const int GL_TEXTURE_BIT = 262144;
		public const int GL_SCISSOR_BIT = 524288;
		public const uint GL_ALL_ATTRIB_BITS = 1048575;
		public const uint GL_POINTS = 0;
		public const uint GL_LINES = 1;
		public const uint GL_LINE_LOOP = 2;
		public const uint GL_LINE_STRIP = 3;
		public const uint GL_TRIANGLES = 4;
		public const uint GL_TRIANGLE_STRIP = 5;
		public const uint GL_TRIANGLE_FAN = 6;
		public const uint GL_QUADS = 7;
		public const uint GL_QUAD_STRIP = 8;
		public const uint GL_POLYGON = 9;
		public const uint GL_ZERO = 0;
		public const uint GL_ONE = 1;
		public const uint GL_SRC_COLOR = 768;
		public const uint GL_ONE_MINUS_SRC_COLOR = 769;
		public const uint GL_SRC_ALPHA = 770;
		public const uint GL_ONE_MINUS_SRC_ALPHA = 771;
		public const uint GL_DST_ALPHA = 772;
		public const uint GL_ONE_MINUS_DST_ALPHA = 773;
		public const uint GL_DST_COLOR = 774;
		public const uint GL_ONE_MINUS_DST_COLOR = 775;
		public const uint GL_SRC_ALPHA_SATURATE = 776;
		public const byte GL_TRUE = 1;
		public const byte GL_FALSE = 0;
		public const uint GL_CLIP_PLANE0 = 12288;
		public const uint GL_CLIP_PLANE1 = 12289;
		public const uint GL_CLIP_PLANE2 = 12290;
		public const uint GL_CLIP_PLANE3 = 12291;
		public const uint GL_CLIP_PLANE4 = 12292;
		public const uint GL_CLIP_PLANE5 = 12293;
		public const uint GL_BYTE = 5120;
		public const uint GL_UNSIGNED_BYTE = 5121;
		public const uint GL_SHORT = 5122;
		public const uint GL_UNSIGNED_SHORT = 5123;
		public const uint GL_INT = 5124;
		public const uint GL_UNSIGNED_INT = 5125;
		public const uint GL_FLOAT = 5126;
		public const uint GL_2_BYTES = 5127;
		public const uint GL_3_BYTES = 5128;
		public const uint GL_4_BYTES = 5129;
		public const uint GL_DOUBLE = 5130;
		public const uint GL_NONE = 0;
		public const uint GL_FRONT_LEFT = 1024;
		public const uint GL_FRONT_RIGHT = 1025;
		public const uint GL_BACK_LEFT = 1026;
		public const uint GL_BACK_RIGHT = 1027;
		public const uint GL_FRONT = 1028;
		public const uint GL_BACK = 1029;
		public const uint GL_LEFT = 1030;
		public const uint GL_RIGHT = 1031;
		public const uint GL_FRONT_AND_BACK = 1032;
		public const uint GL_AUX0 = 1033;
		public const uint GL_AUX1 = 1034;
		public const uint GL_AUX2 = 1035;
		public const uint GL_AUX3 = 1036;
		public const uint GL_NO_ERROR = 0;
		public const uint GL_INVALID_ENUM = 1280;
		public const uint GL_INVALID_VALUE = 1281;
		public const uint GL_INVALID_OPERATION = 1282;
		public const uint GL_STACK_OVERFLOW = 1283;
		public const uint GL_STACK_UNDERFLOW = 1284;
		public const uint GL_OUT_OF_MEMORY = 1285;
		public const uint GL_2D = 1536;
		public const uint GL_3D = 1537;
		public const uint GL_3D_COLOR = 1538;
		public const uint GL_3D_COLOR_TEXTURE = 1539;
		public const uint GL_4D_COLOR_TEXTURE = 1540;
		public const uint GL_PASS_THROUGH_TOKEN = 1792;
		public const uint GL_POINT_TOKEN = 1793;
		public const uint GL_LINE_TOKEN = 1794;
		public const uint GL_POLYGON_TOKEN = 1795;
		public const uint GL_BITMAP_TOKEN = 1796;
		public const uint GL_DRAW_PIXEL_TOKEN = 1797;
		public const uint GL_COPY_PIXEL_TOKEN = 1798;
		public const uint GL_LINE_RESET_TOKEN = 1799;
		public const uint GL_EXP = 2048;
		public const uint GL_EXP2 = 2049;
		public const uint GL_CW = 2304;
		public const uint GL_CCW = 2305;
		public const uint GL_COEFF = 2560;
		public const uint GL_ORDER = 2561;
		public const uint GL_DOMAIN = 2562;
		public const uint GL_CURRENT_COLOR = 2816;
		public const uint GL_CURRENT_INDEX = 2817;
		public const uint GL_CURRENT_NORMAL = 2818;
		public const uint GL_CURRENT_TEXTURE_COORDS = 2819;
		public const uint GL_CURRENT_RASTER_COLOR = 2820;
		public const uint GL_CURRENT_RASTER_INDEX = 2821;
		public const uint GL_CURRENT_RASTER_TEXTURE_COORDS = 2822;
		public const uint GL_CURRENT_RASTER_POSITION = 2823;
		public const uint GL_CURRENT_RASTER_POSITION_VALID = 2824;
		public const uint GL_CURRENT_RASTER_DISTANCE = 2825;
		public const uint GL_POINT_SMOOTH = 2832;
		public const uint GL_POINT_SIZE = 2833;
		public const uint GL_POINT_SIZE_RANGE = 2834;
		public const uint GL_POINT_SIZE_GRANULARITY = 2835;
		public const uint GL_LINE_SMOOTH = 2848;
		public const uint GL_LINE_WIDTH = 2849;
		public const uint GL_LINE_WIDTH_RANGE = 2850;
		public const uint GL_LINE_WIDTH_GRANULARITY = 2851;
		public const uint GL_LINE_STIPPLE = 2852;
		public const uint GL_LINE_STIPPLE_PATTERN = 2853;
		public const uint GL_LINE_STIPPLE_REPEAT = 2854;
		public const uint GL_LIST_MODE = 2864;
		public const uint GL_MAX_LIST_NESTING = 2865;
		public const uint GL_LIST_BASE = 2866;
		public const uint GL_LIST_INDEX = 2867;
		public const uint GL_POLYGON_MODE = 2880;
		public const uint GL_POLYGON_SMOOTH = 2881;
		public const uint GL_POLYGON_STIPPLE = 2882;
		public const uint GL_EDGE_FLAG = 2883;
		public const uint GL_CULL_FACE = 2884;
		public const uint GL_CULL_FACE_MODE = 2885;
		public const uint GL_FRONT_FACE = 2886;
		public const uint GL_LIGHTING = 2896;
		public const uint GL_LIGHT_MODEL_LOCAL_VIEWER = 2897;
		public const uint GL_LIGHT_MODEL_TWO_SIDE = 2898;
		public const uint GL_LIGHT_MODEL_AMBIENT = 2899;
		public const uint GL_SHADE_MODEL = 2900;
		public const uint GL_COLOR_MATERIAL_FACE = 2901;
		public const uint GL_COLOR_MATERIAL_PARAMETER = 2902;
		public const uint GL_COLOR_MATERIAL = 2903;
		public const uint GL_FOG = 2912;
		public const uint GL_FOG_INDEX = 2913;
		public const uint GL_FOG_DENSITY = 2914;
		public const uint GL_FOG_START = 2915;
		public const uint GL_FOG_END = 2916;
		public const uint GL_FOG_MODE = 2917;
		public const uint GL_FOG_COLOR = 2918;
		public const uint GL_DEPTH_RANGE = 2928;
		public const uint GL_DEPTH_TEST = 2929;
		public const uint GL_DEPTH_WRITEMASK = 2930;
		public const uint GL_DEPTH_CLEAR_VALUE = 2931;
		public const uint GL_DEPTH_FUNC = 2932;
		public const uint GL_ACCUM_CLEAR_VALUE = 2944;
		public const uint GL_STENCIL_TEST = 2960;
		public const uint GL_STENCIL_CLEAR_VALUE = 2961;
		public const uint GL_STENCIL_FUNC = 2962;
		public const uint GL_STENCIL_VALUE_MASK = 2963;
		public const uint GL_STENCIL_FAIL = 2964;
		public const uint GL_STENCIL_PASS_DEPTH_FAIL = 2965;
		public const uint GL_STENCIL_PASS_DEPTH_PASS = 2966;
		public const uint GL_STENCIL_REF = 2967;
		public const uint GL_STENCIL_WRITEMASK = 2968;
		public const uint GL_MATRIX_MODE = 2976;
		public const uint GL_NORMALIZE = 2977;
		public const uint GL_VIEWPORT = 2978;
		public const uint GL_MODELVIEW_STACK_DEPTH = 2979;
		public const uint GL_PROJECTION_STACK_DEPTH = 2980;
		public const uint GL_TEXTURE_STACK_DEPTH = 2981;
		public const uint GL_MODELVIEW_MATRIX = 2982;
		public const uint GL_PROJECTION_MATRIX = 2983;
		public const uint GL_TEXTURE_MATRIX = 2984;
		public const uint GL_ATTRIB_STACK_DEPTH = 2992;
		public const uint GL_CLIENT_ATTRIB_STACK_DEPTH = 2993;
		public const uint GL_ALPHA_TEST = 3008;
		public const uint GL_ALPHA_TEST_FUNC = 3009;
		public const uint GL_ALPHA_TEST_REF = 3010;
		public const uint GL_DITHER = 3024;
		public const uint GL_BLEND_DST = 3040;
		public const uint GL_BLEND_SRC = 3041;
		public const uint GL_BLEND = 3042;
		public const uint GL_LOGIC_OP_MODE = 3056;
		public const uint GL_INDEX_LOGIC_OP = 3057;
		public const uint GL_COLOR_LOGIC_OP = 3058;
		public const uint GL_AUX_BUFFERS = 3072;
		public const uint GL_DRAW_BUFFER = 3073;
		public const uint GL_READ_BUFFER = 3074;
		public const uint GL_SCISSOR_BOX = 3088;
		public const uint GL_SCISSOR_TEST = 3089;
		public const uint GL_INDEX_CLEAR_VALUE = 3104;
		public const uint GL_INDEX_WRITEMASK = 3105;
		public const uint GL_COLOR_CLEAR_VALUE = 3106;
		public const uint GL_COLOR_WRITEMASK = 3107;
		public const uint GL_INDEX_MODE = 3120;
		public const uint GL_RGBA_MODE = 3121;
		public const uint GL_DOUBLEBUFFER = 3122;
		public const uint GL_STEREO = 3123;
		public const uint GL_RENDER_MODE = 3136;
		public const uint GL_PERSPECTIVE_CORRECTION_HINT = 3152;
		public const uint GL_POINT_SMOOTH_HINT = 3153;
		public const uint GL_LINE_SMOOTH_HINT = 3154;
		public const uint GL_POLYGON_SMOOTH_HINT = 3155;
		public const uint GL_FOG_HINT = 3156;
		public const uint GL_TEXTURE_GEN_S = 3168;
		public const uint GL_TEXTURE_GEN_T = 3169;
		public const uint GL_TEXTURE_GEN_R = 3170;
		public const uint GL_TEXTURE_GEN_Q = 3171;
		public const uint GL_PIXEL_MAP_I_TO_I = 3184;
		public const uint GL_PIXEL_MAP_S_TO_S = 3185;
		public const uint GL_PIXEL_MAP_I_TO_R = 3186;
		public const uint GL_PIXEL_MAP_I_TO_G = 3187;
		public const uint GL_PIXEL_MAP_I_TO_B = 3188;
		public const uint GL_PIXEL_MAP_I_TO_A = 3189;
		public const uint GL_PIXEL_MAP_R_TO_R = 3190;
		public const uint GL_PIXEL_MAP_G_TO_G = 3191;
		public const uint GL_PIXEL_MAP_B_TO_B = 3192;
		public const uint GL_PIXEL_MAP_A_TO_A = 3193;
		public const uint GL_PIXEL_MAP_I_TO_I_SIZE = 3248;
		public const uint GL_PIXEL_MAP_S_TO_S_SIZE = 3249;
		public const uint GL_PIXEL_MAP_I_TO_R_SIZE = 3250;
		public const uint GL_PIXEL_MAP_I_TO_G_SIZE = 3251;
		public const uint GL_PIXEL_MAP_I_TO_B_SIZE = 3252;
		public const uint GL_PIXEL_MAP_I_TO_A_SIZE = 3253;
		public const uint GL_PIXEL_MAP_R_TO_R_SIZE = 3254;
		public const uint GL_PIXEL_MAP_G_TO_G_SIZE = 3255;
		public const uint GL_PIXEL_MAP_B_TO_B_SIZE = 3256;
		public const uint GL_PIXEL_MAP_A_TO_A_SIZE = 3257;
		public const uint GL_UNPACK_SWAP_BYTES = 3312;
		public const uint GL_UNPACK_LSB_FIRST = 3313;
		public const uint GL_UNPACK_ROW_LENGTH = 3314;
		public const uint GL_UNPACK_SKIP_ROWS = 3315;
		public const uint GL_UNPACK_SKIP_PIXELS = 3316;
		public const uint GL_UNPACK_ALIGNMENT = 3317;
		public const uint GL_PACK_SWAP_BYTES = 3328;
		public const uint GL_PACK_LSB_FIRST = 3329;
		public const uint GL_PACK_ROW_LENGTH = 3330;
		public const uint GL_PACK_SKIP_ROWS = 3331;
		public const uint GL_PACK_SKIP_PIXELS = 3332;
		public const uint GL_PACK_ALIGNMENT = 3333;
		public const uint GL_MAP_COLOR = 3344;
		public const uint GL_MAP_STENCIL = 3345;
		public const uint GL_INDEX_SHIFT = 3346;
		public const uint GL_INDEX_OFFSET = 3347;
		public const uint GL_RED_SCALE = 3348;
		public const uint GL_RED_BIAS = 3349;
		public const uint GL_ZOOM_X = 3350;
		public const uint GL_ZOOM_Y = 3351;
		public const uint GL_GREEN_SCALE = 3352;
		public const uint GL_GREEN_BIAS = 3353;
		public const uint GL_BLUE_SCALE = 3354;
		public const uint GL_BLUE_BIAS = 3355;
		public const uint GL_ALPHA_SCALE = 3356;
		public const uint GL_ALPHA_BIAS = 3357;
		public const uint GL_DEPTH_SCALE = 3358;
		public const uint GL_DEPTH_BIAS = 3359;
		public const uint GL_MAX_EVAL_ORDER = 3376;
		public const uint GL_MAX_LIGHTS = 3377;
		public const uint GL_MAX_CLIP_PLANES = 3378;
		public const uint GL_MAX_TEXTURE_SIZE = 3379;
		public const uint GL_MAX_PIXEL_MAP_TABLE = 3380;
		public const uint GL_MAX_ATTRIB_STACK_DEPTH = 3381;
		public const uint GL_MAX_MODELVIEW_STACK_DEPTH = 3382;
		public const uint GL_MAX_NAME_STACK_DEPTH = 3383;
		public const uint GL_MAX_PROJECTION_STACK_DEPTH = 3384;
		public const uint GL_MAX_TEXTURE_STACK_DEPTH = 3385;
		public const uint GL_MAX_VIEWPORT_DIMS = 3386;
		public const uint GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 3387;
		public const uint GL_SUBPIXEL_BITS = 3408;
		public const uint GL_INDEX_BITS = 3409;
		public const uint GL_RED_BITS = 3410;
		public const uint GL_GREEN_BITS = 3411;
		public const uint GL_BLUE_BITS = 3412;
		public const uint GL_ALPHA_BITS = 3413;
		public const uint GL_DEPTH_BITS = 3414;
		public const uint GL_STENCIL_BITS = 3415;
		public const uint GL_ACCUM_RED_BITS = 3416;
		public const uint GL_ACCUM_GREEN_BITS = 3417;
		public const uint GL_ACCUM_BLUE_BITS = 3418;
		public const uint GL_ACCUM_ALPHA_BITS = 3419;
		public const uint GL_NAME_STACK_DEPTH = 3440;
		public const uint GL_AUTO_NORMAL = 3456;
		public const uint GL_MAP1_COLOR_4 = 3472;
		public const uint GL_MAP1_INDEX = 3473;
		public const uint GL_MAP1_NORMAL = 3474;
		public const uint GL_MAP1_TEXTURE_COORD_1 = 3475;
		public const uint GL_MAP1_TEXTURE_COORD_2 = 3476;
		public const uint GL_MAP1_TEXTURE_COORD_3 = 3477;
		public const uint GL_MAP1_TEXTURE_COORD_4 = 3478;
		public const uint GL_MAP1_VERTEX_3 = 3479;
		public const uint GL_MAP1_VERTEX_4 = 3480;
		public const uint GL_MAP2_COLOR_4 = 3504;
		public const uint GL_MAP2_INDEX = 3505;
		public const uint GL_MAP2_NORMAL = 3506;
		public const uint GL_MAP2_TEXTURE_COORD_1 = 3507;
		public const uint GL_MAP2_TEXTURE_COORD_2 = 3508;
		public const uint GL_MAP2_TEXTURE_COORD_3 = 3509;
		public const uint GL_MAP2_TEXTURE_COORD_4 = 3510;
		public const uint GL_MAP2_VERTEX_3 = 3511;
		public const uint GL_MAP2_VERTEX_4 = 3512;
		public const uint GL_MAP1_GRID_DOMAIN = 3536;
		public const uint GL_MAP1_GRID_SEGMENTS = 3537;
		public const uint GL_MAP2_GRID_DOMAIN = 3538;
		public const uint GL_MAP2_GRID_SEGMENTS = 3539;
		public const uint GL_TEXTURE_1D = 3552;
		public const uint GL_TEXTURE_2D = 3553;
		public const uint GL_FEEDBACK_BUFFER_POINTER = 3568;
		public const uint GL_FEEDBACK_BUFFER_SIZE = 3569;
		public const uint GL_FEEDBACK_BUFFER_TYPE = 3570;
		public const uint GL_SELECTION_BUFFER_POINTER = 3571;
		public const uint GL_SELECTION_BUFFER_SIZE = 3572;
		public const uint GL_TEXTURE_WIDTH = 4096;
		public const uint GL_TEXTURE_HEIGHT = 4097;
		public const uint GL_TEXTURE_INTERNAL_FORMAT = 4099;
		public const uint GL_TEXTURE_BORDER_COLOR = 4100;
		public const uint GL_TEXTURE_BORDER = 4101;
		public const uint GL_DONT_CARE = 4352;
		public const uint GL_FASTEST = 4353;
		public const uint GL_NICEST = 4354;
		public const uint GL_LIGHT0 = 16384;
		public const uint GL_LIGHT1 = 16385;
		public const uint GL_LIGHT2 = 16386;
		public const uint GL_LIGHT3 = 16387;
		public const uint GL_LIGHT4 = 16388;
		public const uint GL_LIGHT5 = 16389;
		public const uint GL_LIGHT6 = 16390;
		public const uint GL_LIGHT7 = 16391;
		public const uint GL_AMBIENT = 4608;
		public const uint GL_DIFFUSE = 4609;
		public const uint GL_SPECULAR = 4610;
		public const uint GL_POSITION = 4611;
		public const uint GL_SPOT_DIRECTION = 4612;
		public const uint GL_SPOT_EXPONENT = 4613;
		public const uint GL_SPOT_CUTOFF = 4614;
		public const uint GL_CONSTANT_ATTENUATION = 4615;
		public const uint GL_LINEAR_ATTENUATION = 4616;
		public const uint GL_QUADRATIC_ATTENUATION = 4617;
		public const uint GL_COMPILE = 4864;
		public const uint GL_COMPILE_AND_EXECUTE = 4865;
		public const uint GL_CLEAR = 5376;
		public const uint GL_AND = 5377;
		public const uint GL_AND_REVERSE = 5378;
		public const uint GL_COPY = 5379;
		public const uint GL_AND_INVERTED = 5380;
		public const uint GL_NOOP = 5381;
		public const uint GL_XOR = 5382;
		public const uint GL_OR = 5383;
		public const uint GL_NOR = 5384;
		public const uint GL_EQUIV = 5385;
		public const uint GL_INVERT = 5386;
		public const uint GL_OR_REVERSE = 5387;
		public const uint GL_COPY_INVERTED = 5388;
		public const uint GL_OR_INVERTED = 5389;
		public const uint GL_NAND = 5390;
		public const uint GL_SET = 5391;
		public const uint GL_EMISSION = 5632;
		public const uint GL_SHININESS = 5633;
		public const uint GL_AMBIENT_AND_DIFFUSE = 5634;
		public const uint GL_COLOR_INDEXES = 5635;
		public const uint GL_MODELVIEW = 5888;
		public const uint GL_PROJECTION = 5889;
		public const uint GL_TEXTURE = 5890;
		public const uint GL_COLOR = 6144;
		public const uint GL_DEPTH = 6145;
		public const uint GL_STENCIL = 6146;
		public const uint GL_COLOR_INDEX = 6400;
		public const uint GL_STENCIL_INDEX = 6401;
		public const uint GL_DEPTH_COMPONENT = 6402;
		public const uint GL_RED = 6403;
		public const uint GL_GREEN = 6404;
		public const uint GL_BLUE = 6405;
		public const uint GL_ALPHA = 6406;
		public const uint GL_RGB = 6407;
		public const uint GL_RGBA = 6408;
		public const uint GL_LUMINANCE = 6409;
		public const uint GL_LUMINANCE_ALPHA = 6410;
		public const uint GL_BITMAP = 6656;
		public const uint GL_POINT = 6912;
		public const uint GL_LINE = 6913;
		public const uint GL_FILL = 6914;
		public const uint GL_RENDER = 7168;
		public const uint GL_FEEDBACK = 7169;
		public const uint GL_SELECT = 7170;
		public const uint GL_FLAT = 7424;
		public const uint GL_SMOOTH = 7425;
		public const uint GL_KEEP = 7680;
		public const uint GL_REPLACE = 7681;
		public const uint GL_INCR = 7682;
		public const uint GL_DECR = 7683;
		public const uint GL_VENDOR = 7936;
		public const uint GL_RENDERER = 7937;
		public const uint GL_VERSION = 7938;
		public const uint GL_EXTENSIONS = 7939;
		public const uint GL_S = 8192;
		public const uint GL_T = 8193;
		public const uint GL_R = 8194;
		public const uint GL_Q = 8195;
		public const uint GL_MODULATE = 8448;
		public const uint GL_DECAL = 8449;
		public const uint GL_TEXTURE_ENV_MODE = 8704;
		public const uint GL_TEXTURE_ENV_COLOR = 8705;
		public const uint GL_TEXTURE_ENV = 8960;
		public const uint GL_EYE_LINEAR = 9216;
		public const uint GL_OBJECT_LINEAR = 9217;
		public const uint GL_SPHERE_MAP = 9218;
		public const uint GL_TEXTURE_GEN_MODE = 9472;
		public const uint GL_OBJECT_PLANE = 9473;
		public const uint GL_EYE_PLANE = 9474;
		public const uint GL_NEAREST = 9728;
		public const uint GL_LINEAR = 9729;
		public const uint GL_NEAREST_MIPMAP_NEAREST = 9984;
		public const uint GL_LINEAR_MIPMAP_NEAREST = 9985;
		public const uint GL_NEAREST_MIPMAP_LINEAR = 9986;
		public const uint GL_LINEAR_MIPMAP_LINEAR = 9987;
		public const uint GL_TEXTURE_MAG_FILTER = 10240;
		public const uint GL_TEXTURE_MIN_FILTER = 10241;
		public const uint GL_TEXTURE_WRAP_S = 10242;
		public const uint GL_TEXTURE_WRAP_T = 10243;
		public const uint GL_CLAMP = 10496;
		public const uint GL_REPEAT = 10497;
		public const int GL_CLIENT_PIXEL_STORE_BIT = 1;
		public const int GL_CLIENT_VERTEX_ARRAY_BIT = 2;
		public const int GL_CLIENT_ALL_ATTRIB_BITS = -1;
		public const uint GL_POLYGON_OFFSET_FACTOR = 32824;
		public const uint GL_POLYGON_OFFSET_UNITS = 10752;
		public const uint GL_POLYGON_OFFSET_POINT = 10753;
		public const uint GL_POLYGON_OFFSET_LINE = 10754;
		public const uint GL_POLYGON_OFFSET_FILL = 32823;
		public const uint GL_ALPHA4 = 32827;
		public const uint GL_ALPHA8 = 32828;
		public const uint GL_ALPHA12 = 32829;
		public const uint GL_ALPHA16 = 32830;
		public const uint GL_LUMINANCE4 = 32831;
		public const uint GL_LUMINANCE8 = 32832;
		public const uint GL_LUMINANCE12 = 32833;
		public const uint GL_LUMINANCE16 = 32834;
		public const uint GL_LUMINANCE4_ALPHA4 = 32835;
		public const uint GL_LUMINANCE6_ALPHA2 = 32836;
		public const uint GL_LUMINANCE8_ALPHA8 = 32837;
		public const uint GL_LUMINANCE12_ALPHA4 = 32838;
		public const uint GL_LUMINANCE12_ALPHA12 = 32839;
		public const uint GL_LUMINANCE16_ALPHA16 = 32840;
		public const uint GL_INTENSITY = 32841;
		public const uint GL_INTENSITY4 = 32842;
		public const uint GL_INTENSITY8 = 32843;
		public const uint GL_INTENSITY12 = 32844;
		public const uint GL_INTENSITY16 = 32845;
		public const uint GL_R3_G3_B2 = 10768;
		public const uint GL_RGB4 = 32847;
		public const uint GL_RGB5 = 32848;
		public const uint GL_RGB8 = 32849;
		public const uint GL_RGB10 = 32850;
		public const uint GL_RGB12 = 32851;
		public const uint GL_RGB16 = 32852;
		public const uint GL_RGBA2 = 32853;
		public const uint GL_RGBA4 = 32854;
		public const uint GL_RGB5_A1 = 32855;
		public const uint GL_RGBA8 = 32856;
		public const uint GL_RGB10_A2 = 32857;
		public const uint GL_RGBA12 = 32858;
		public const uint GL_RGBA16 = 32859;
		public const uint GL_TEXTURE_RED_SIZE = 32860;
		public const uint GL_TEXTURE_GREEN_SIZE = 32861;
		public const uint GL_TEXTURE_BLUE_SIZE = 32862;
		public const uint GL_TEXTURE_ALPHA_SIZE = 32863;
		public const uint GL_TEXTURE_LUMINANCE_SIZE = 32864;
		public const uint GL_TEXTURE_INTENSITY_SIZE = 32865;
		public const uint GL_PROXY_TEXTURE_1D = 32867;
		public const uint GL_PROXY_TEXTURE_2D = 32868;
		public const uint GL_TEXTURE_PRIORITY = 32870;
		public const uint GL_TEXTURE_RESIDENT = 32871;
		public const uint GL_TEXTURE_BINDING_1D = 32872;
		public const uint GL_TEXTURE_BINDING_2D = 32873;
		public const uint GL_VERTEX_ARRAY = 32884;
		public const uint GL_NORMAL_ARRAY = 32885;
		public const uint GL_COLOR_ARRAY = 32886;
		public const uint GL_INDEX_ARRAY = 32887;
		public const uint GL_TEXTURE_COORD_ARRAY = 32888;
		public const uint GL_EDGE_FLAG_ARRAY = 32889;
		public const uint GL_VERTEX_ARRAY_SIZE = 32890;
		public const uint GL_VERTEX_ARRAY_TYPE = 32891;
		public const uint GL_VERTEX_ARRAY_STRIDE = 32892;
		public const uint GL_NORMAL_ARRAY_TYPE = 32894;
		public const uint GL_NORMAL_ARRAY_STRIDE = 32895;
		public const uint GL_COLOR_ARRAY_SIZE = 32897;
		public const uint GL_COLOR_ARRAY_TYPE = 32898;
		public const uint GL_COLOR_ARRAY_STRIDE = 32899;
		public const uint GL_INDEX_ARRAY_TYPE = 32901;
		public const uint GL_INDEX_ARRAY_STRIDE = 32902;
		public const uint GL_TEXTURE_COORD_ARRAY_SIZE = 32904;
		public const uint GL_TEXTURE_COORD_ARRAY_TYPE = 32905;
		public const uint GL_TEXTURE_COORD_ARRAY_STRIDE = 32906;
		public const uint GL_EDGE_FLAG_ARRAY_STRIDE = 32908;
		public const uint GL_VERTEX_ARRAY_POINTER = 32910;
		public const uint GL_NORMAL_ARRAY_POINTER = 32911;
		public const uint GL_COLOR_ARRAY_POINTER = 32912;
		public const uint GL_INDEX_ARRAY_POINTER = 32913;
		public const uint GL_TEXTURE_COORD_ARRAY_POINTER = 32914;
		public const uint GL_EDGE_FLAG_ARRAY_POINTER = 32915;
		public const uint GL_V2F = 10784;
		public const uint GL_V3F = 10785;
		public const uint GL_C4UB_V2F = 10786;
		public const uint GL_C4UB_V3F = 10787;
		public const uint GL_C3F_V3F = 10788;
		public const uint GL_N3F_V3F = 10789;
		public const uint GL_C4F_N3F_V3F = 10790;
		public const uint GL_T2F_V3F = 10791;
		public const uint GL_T4F_V4F = 10792;
		public const uint GL_T2F_C4UB_V3F = 10793;
		public const uint GL_T2F_C3F_V3F = 10794;
		public const uint GL_T2F_N3F_V3F = 10795;
		public const uint GL_T2F_C4F_N3F_V3F = 10796;
		public const uint GL_T4F_C4F_N3F_V4F = 10797;
		public const uint GL_EXT_vertex_array = 1;
		public const uint GL_EXT_bgra = 1;
		public const uint GL_EXT_paletted_texture = 1;
		public const uint GL_WIN_swap_hint = 1;
		public const uint GL_WIN_draw_range_elements = 1;
		public const uint GL_VERTEX_ARRAY_EXT = 32884;
		public const uint GL_NORMAL_ARRAY_EXT = 32885;
		public const uint GL_COLOR_ARRAY_EXT = 32886;
		public const uint GL_INDEX_ARRAY_EXT = 32887;
		public const uint GL_TEXTURE_COORD_ARRAY_EXT = 32888;
		public const uint GL_EDGE_FLAG_ARRAY_EXT = 32889;
		public const uint GL_VERTEX_ARRAY_SIZE_EXT = 32890;
		public const uint GL_VERTEX_ARRAY_TYPE_EXT = 32891;
		public const uint GL_VERTEX_ARRAY_STRIDE_EXT = 32892;
		public const uint GL_VERTEX_ARRAY_COUNT_EXT = 32893;
		public const uint GL_NORMAL_ARRAY_TYPE_EXT = 32894;
		public const uint GL_NORMAL_ARRAY_STRIDE_EXT = 32895;
		public const uint GL_NORMAL_ARRAY_COUNT_EXT = 32896;
		public const uint GL_COLOR_ARRAY_SIZE_EXT = 32897;
		public const uint GL_COLOR_ARRAY_TYPE_EXT = 32898;
		public const uint GL_COLOR_ARRAY_STRIDE_EXT = 32899;
		public const uint GL_COLOR_ARRAY_COUNT_EXT = 32900;
		public const uint GL_INDEX_ARRAY_TYPE_EXT = 32901;
		public const uint GL_INDEX_ARRAY_STRIDE_EXT = 32902;
		public const uint GL_INDEX_ARRAY_COUNT_EXT = 32903;
		public const uint GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 32904;
		public const uint GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 32905;
		public const uint GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 32906;
		public const uint GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 32907;
		public const uint GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 32908;
		public const uint GL_EDGE_FLAG_ARRAY_COUNT_EXT = 32909;
		public const uint GL_VERTEX_ARRAY_POINTER_EXT = 32910;
		public const uint GL_NORMAL_ARRAY_POINTER_EXT = 32911;
		public const uint GL_COLOR_ARRAY_POINTER_EXT = 32912;
		public const uint GL_INDEX_ARRAY_POINTER_EXT = 32913;
		public const uint GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 32914;
		public const uint GL_EDGE_FLAG_ARRAY_POINTER_EXT = 32915;
		public const uint GL_DOUBLE_EXT = GL_DOUBLE;
		public const uint GL_BGR_EXT = 32992;
		public const uint GL_BGRA_EXT = 32993;
		public const uint GL_COLOR_TABLE_FORMAT_EXT = 32984;
		public const uint GL_COLOR_TABLE_WIDTH_EXT = 32985;
		public const uint GL_COLOR_TABLE_RED_SIZE_EXT = 32986;
		public const uint GL_COLOR_TABLE_GREEN_SIZE_EXT = 32987;
		public const uint GL_COLOR_TABLE_BLUE_SIZE_EXT = 32988;
		public const uint GL_COLOR_TABLE_ALPHA_SIZE_EXT = 32989;
		public const uint GL_COLOR_TABLE_LUMINANCE_SIZE_EXT = 32990;
		public const uint GL_COLOR_TABLE_INTENSITY_SIZE_EXT = 32991;
		public const uint GL_COLOR_INDEX1_EXT = 32994;
		public const uint GL_COLOR_INDEX2_EXT = 32995;
		public const uint GL_COLOR_INDEX4_EXT = 32996;
		public const uint GL_COLOR_INDEX8_EXT = 32997;
		public const uint GL_COLOR_INDEX12_EXT = 32998;
		public const uint GL_COLOR_INDEX16_EXT = 32999;
		public const uint GL_MAX_ELEMENTS_VERTICES_WIN = 33000;
		public const uint GL_MAX_ELEMENTS_INDICES_WIN = 33001;
		public const uint GL_PHONG_WIN = 33002;
		public const uint GL_PHONG_HINT_WIN = 33003;
		public const uint GL_FOG_SPECULAR_TEXTURE_WIN = 33004;
		public const uint GL_LOGIC_OP = GL_INDEX_LOGIC_OP;
		public const uint GL_TEXTURE_COMPONENTS = GL_TEXTURE_INTERNAL_FORMAT;
		#endregion

		#region Delegates
		public delegate void PFNGLARRAYELEMENTEXTPROC(int i);
		public delegate void PFNGLDRAWARRAYSEXTPROC(uint mode, int first, int count);
		public delegate void PFNGLVERTEXPOINTEREXTPROC(int size, uint type, int stride, int count, IntPtr pointer);
		public delegate void PFNGLNORMALPOINTEREXTPROC(uint type, int stride, int count, IntPtr pointer);
		public delegate void PFNGLCOLORPOINTEREXTPROC(int size, uint type, int stride, int count, IntPtr pointer);
		public delegate void PFNGLINDEXPOINTEREXTPROC(uint type, int stride, int count, IntPtr pointer);
		public delegate void PFNGLTEXCOORDPOINTEREXTPROC(int size, uint type, int stride, int count, IntPtr pointer);
		public delegate void PFNGLEDGEFLAGPOINTEREXTPROC(int stride, int count, [In] [MarshalAs(UnmanagedType.LPStr)] string pointer);
		public delegate void PFNGLGETPOINTERVEXTPROC(uint pname, IntPtr[] parameters);
		public delegate void PFNGLARRAYELEMENTARRAYEXTPROC(uint mode, int count, IntPtr pi);
		public delegate void PFNGLDRAWRANGEELEMENTSWINPROC(uint mode, uint start, uint end, int count, uint type, IntPtr indices);
		public delegate void PFNGLADDSWAPHINTRECTWINPROC(int x, int y, int width, int height);
		public delegate void PFNGLCOLORTABLEEXTPROC(uint target, uint internalFormat, int width, uint format, uint type, IntPtr data);
		public delegate void PFNGLCOLORSUBTABLEEXTPROC(uint target, int start, int count, uint format, uint type, IntPtr data);
		public delegate void PFNGLGETCOLORTABLEEXTPROC(uint target, uint format, uint type, IntPtr data);
		public delegate void PFNGLGETCOLORTABLEPARAMETERIVEXTPROC(uint target, uint pname, int[] parameters);
		public delegate void PFNGLGETCOLORTABLEPARAMETERFVEXTPROC(uint target, uint pname, float[] parameters);
		public delegate void PFNGLACCUMPROC(uint op, float value);
		public delegate void PFNGLALPHAFUNCPROC(uint func, float alpha);
		public delegate byte PFNGLARETEXTURESRESIDENTPROC(int n, uint[] textures, IntPtr residences);
		public delegate void PFNGLARRAYELEMENTPROC(int i);
		public delegate void PFNGLBEGINPROC(uint mode);
		public delegate void PFNGLBINDTEXTUREPROC(uint target, uint texture);
		public delegate void PFNGLBITMAPPROC(int width, int height, float xorig, float yorig, float xmove, float ymove, [In] [MarshalAs(UnmanagedType.LPStr)] string bitmap);
		public delegate void PFNGLBLENDFUNCPROC(uint sfactor, uint dfactor);
		public delegate void PFNGLCALLLISTPROC(uint list);
		public delegate void PFNGLCALLLISTSPROC(int n, uint type, IntPtr lists);
		public delegate void PFNGLCLEARPROC(uint mask);
		public delegate void PFNGLCLEARACCUMPROC(float red, float green, float blue, float alpha);
		public delegate void PFNGLCLEARCOLORPROC(float red, float green, float blue, float alpha);
		public delegate void PFNGLCLEARDEPTHPROC(double depth);
		public delegate void PFNGLCLEARINDEXPROC(float c);
		public delegate void PFNGLCLEARSTENCILPROC(int s);
		public delegate void PFNGLCLIPPLANEPROC(uint plane, double[] equation);
		public delegate void PFNGLCOLOR3BPROC(byte red, byte green, byte blue);
		public delegate void PFNGLCOLOR3BVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string v);
		public delegate void PFNGLCOLOR3DPROC(double red, double green, double blue);
		public delegate void PFNGLCOLOR3DVPROC(double[] v);
		public delegate void PFNGLCOLOR3FPROC(float red, float green, float blue);
		public delegate void PFNGLCOLOR3FVPROC(float[] v);
		public delegate void PFNGLCOLOR3IPROC(int red, int green, int blue);
		public delegate void PFNGLCOLOR3IVPROC(int[] v);
		public delegate void PFNGLCOLOR3SPROC(short red, short green, short blue);
		public delegate void PFNGLCOLOR3SVPROC(short[] v);
		public delegate void PFNGLCOLOR3UBPROC(byte red, byte green, byte blue);
		public delegate void PFNGLCOLOR3UBVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string v);
		public delegate void PFNGLCOLOR3UIPROC(uint red, uint green, uint blue);
		public delegate void PFNGLCOLOR3UIVPROC(uint[] v);
		public delegate void PFNGLCOLOR3USPROC(ushort red, ushort green, ushort blue);
		public delegate void PFNGLCOLOR3USVPROC(ushort[] v);
		public delegate void PFNGLCOLOR4BPROC(byte red, byte green, byte blue, byte alpha);
		public delegate void PFNGLCOLOR4BVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string v);
		public delegate void PFNGLCOLOR4DPROC(double red, double green, double blue, double alpha);
		public delegate void PFNGLCOLOR4DVPROC(double[] v);
		public delegate void PFNGLCOLOR4FPROC(float red, float green, float blue, float alpha);
		public delegate void PFNGLCOLOR4FVPROC(float[] v);
		public delegate void PFNGLCOLOR4IPROC(int red, int green, int blue, int alpha);
		public delegate void PFNGLCOLOR4IVPROC(int[] v);
		public delegate void PFNGLCOLOR4SPROC(short red, short green, short blue, short alpha);
		public delegate void PFNGLCOLOR4SVPROC(short[] v);
		public delegate void PFNGLCOLOR4UBPROC(byte red, byte green, byte blue, byte alpha);
		public delegate void PFNGLCOLOR4UBVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string v);
		public delegate void PFNGLCOLOR4UIPROC(uint red, uint green, uint blue, uint alpha);
		public delegate void PFNGLCOLOR4UIVPROC(uint[] v);
		public delegate void PFNGLCOLOR4USPROC(ushort red, ushort green, ushort blue, ushort alpha);
		public delegate void PFNGLCOLOR4USVPROC(ushort[] v);
		public delegate void PFNGLCOLORMASKPROC(byte red, byte green, byte blue, byte alpha);
		public delegate void PFNGLCOLORMATERIALPROC(uint face, uint mode);
		public delegate void PFNGLCOLORPOINTERPROC(int size, uint type, int stride, IntPtr pointer);
		public delegate void PFNGLCOPYPIXELSPROC(int x, int y, int width, int height, uint type);
		public delegate void PFNGLCOPYTEXIMAGE1DPROC(uint target, int level, uint internalFormat, int x, int y, int width, int border);
		public delegate void PFNGLCOPYTEXIMAGE2DPROC(uint target, int level, uint internalFormat, int x, int y, int width, int height, int border);
		public delegate void PFNGLCOPYTEXSUBIMAGE1DPROC(uint target, int level, int xoffset, int x, int y, int width);
		public delegate void PFNGLCOPYTEXSUBIMAGE2DPROC(uint target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		public delegate void PFNGLCULLFACEPROC(uint mode);
		public delegate void PFNGLDELETELISTSPROC(uint list, int range);
		public delegate void PFNGLDELETETEXTURESPROC(int n, uint[] textures);
		public delegate void PFNGLDEPTHFUNCPROC(uint func);
		public delegate void PFNGLDEPTHMASKPROC(byte flag);
		public delegate void PFNGLDEPTHRANGEPROC(double zNear, double zFar);
		public delegate void PFNGLDISABLEPROC(uint cap);
		public delegate void PFNGLDISABLECLIENTSTATEPROC(uint array);
		public delegate void PFNGLDRAWARRAYSPROC(uint mode, int first, int count);
		public delegate void PFNGLDRAWBUFFERPROC(uint mode);
		public delegate void PFNGLDRAWELEMENTSPROC(uint mode, int count, uint type, IntPtr indices);
		public delegate void PFNGLDRAWPIXELSPROC(int width, int height, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLEDGEFLAGPROC(byte flag);
		public delegate void PFNGLEDGEFLAGPOINTERPROC(int stride, IntPtr pointer);
		public delegate void PFNGLEDGEFLAGVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string flag);
		public delegate void PFNGLENABLEPROC(uint cap);
		public delegate void PFNGLENABLECLIENTSTATEPROC(uint array);
		public delegate void PFNGLENDPROC();
		public delegate void PFNGLENDLISTPROC();
		public delegate void PFNGLEVALCOORD1DPROC(double u);
		public delegate void PFNGLEVALCOORD1DVPROC(double[] u);
		public delegate void PFNGLEVALCOORD1FPROC(float u);
		public delegate void PFNGLEVALCOORD1FVPROC(float[] u);
		public delegate void PFNGLEVALCOORD2DPROC(double u, double v);
		public delegate void PFNGLEVALCOORD2DVPROC(double[] u);
		public delegate void PFNGLEVALCOORD2FPROC(float u, float v);
		public delegate void PFNGLEVALCOORD2FVPROC(float[] u);
		public delegate void PFNGLEVALMESH1PROC(uint mode, int i1, int i2);
		public delegate void PFNGLEVALMESH2PROC(uint mode, int i1, int i2, int j1, int j2);
		public delegate void PFNGLEVALPOINT1PROC(int i);
		public delegate void PFNGLEVALPOINT2PROC(int i, int j);
		public delegate void PFNGLFEEDBACKBUFFERPROC(int size, uint type, float[] buffer);
		public delegate void PFNGLFINISHPROC();
		public delegate void PFNGLFLUSHPROC();
		public delegate void PFNGLFOGFPROC(uint pname, float param);
		public delegate void PFNGLFOGFVPROC(uint pname, float[] parameters);
		public delegate void PFNGLFOGIPROC(uint pname, int param);
		public delegate void PFNGLFOGIVPROC(uint pname, int[] parameters);
		public delegate void PFNGLFRONTFACEPROC(uint mode);
		public delegate void PFNGLFRUSTUMPROC(double left, double right, double bottom, double top, double zNear, double zFar);
		public delegate uint PFNGLGENLISTSPROC(int range);
		public delegate void PFNGLGENTEXTURESPROC(int n, ref uint textures);
		public delegate void PFNGLGETBOOLEANVPROC(uint pname, IntPtr parameters);
		public delegate void PFNGLGETCLIPPLANEPROC(uint plane, double[] equation);
		public delegate void PFNGLGETDOUBLEVPROC(uint pname, double[] parameters);
		public delegate uint PFNGLGETERRORPROC();
		public delegate void PFNGLGETFLOATVPROC(uint pname, float[] parameters);
		public delegate void PFNGLGETINTEGERVPROC(uint pname, int[] parameters);
		public delegate void PFNGLGETLIGHTFVPROC(uint light, uint pname, float[] parameters);
		public delegate void PFNGLGETLIGHTIVPROC(uint light, uint pname, int[] parameters);
		public delegate void PFNGLGETMAPDVPROC(uint target, uint query, double[] v);
		public delegate void PFNGLGETMAPFVPROC(uint target, uint query, float[] v);
		public delegate void PFNGLGETMAPIVPROC(uint target, uint query, int[] v);
		public delegate void PFNGLGETMATERIALFVPROC(uint face, uint pname, float[] parameters);
		public delegate void PFNGLGETMATERIALIVPROC(uint face, uint pname, int[] parameters);
		public delegate void PFNGLGETPIXELMAPFVPROC(uint map, float[] values);
		public delegate void PFNGLGETPIXELMAPUIVPROC(uint map, uint[] values);
		public delegate void PFNGLGETPIXELMAPUSVPROC(uint map, ushort[] values);
		public delegate void PFNGLGETPOINTERVPROC(uint pname, ref IntPtr parameters);
		public delegate void PFNGLGETPOLYGONSTIPPLEPROC(IntPtr mask);
		public delegate void PFNGLGETTEXENVFVPROC(uint target, uint pname, float[] parameters);
		public delegate void PFNGLGETTEXENVIVPROC(uint target, uint pname, int[] parameters);
		public delegate void PFNGLGETTEXGENDVPROC(uint coord, uint pname, double[] parameters);
		public delegate void PFNGLGETTEXGENFVPROC(uint coord, uint pname, float[] parameters);
		public delegate void PFNGLGETTEXGENIVPROC(uint coord, uint pname, int[] parameters);
		public delegate void PFNGLGETTEXIMAGEPROC(uint target, int level, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLGETTEXLEVELPARAMETERFVPROC(uint target, int level, uint pname, float[] parameters);
		public delegate void PFNGLGETTEXLEVELPARAMETERIVPROC(uint target, int level, uint pname, int[] parameters);
		public delegate void PFNGLGETTEXPARAMETERFVPROC(uint target, uint pname, float[] parameters);
		public delegate void PFNGLGETTEXPARAMETERIVPROC(uint target, uint pname, int[] parameters);
		public delegate void PFNGLHINTPROC(uint target, uint mode);
		public delegate void PFNGLINDEXMASKPROC(uint mask);
		public delegate void PFNGLINDEXPOINTERPROC(uint type, int stride, IntPtr pointer);
		public delegate void PFNGLINDEXDPROC(double c);
		public delegate void PFNGLINDEXDVPROC(double[] c);
		public delegate void PFNGLINDEXFPROC(float c);
		public delegate void PFNGLINDEXFVPROC(float[] c);
		public delegate void PFNGLINDEXIPROC(int c);
		public delegate void PFNGLINDEXIVPROC(int[] c);
		public delegate void PFNGLINDEXSPROC(short c);
		public delegate void PFNGLINDEXSVPROC(short[] c);
		public delegate void PFNGLINDEXUBPROC(byte c);
		public delegate void PFNGLINDEXUBVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string c);
		public delegate void PFNGLINITNAMESPROC();
		public delegate void PFNGLINTERLEAVEDARRAYSPROC(uint format, int stride, IntPtr pointer);
		public delegate byte PFNGLISENABLEDPROC(uint cap);
		public delegate byte PFNGLISLISTPROC(uint list);
		public delegate byte PFNGLISTEXTUREPROC(uint texture);
		public delegate void PFNGLLIGHTMODELFPROC(uint pname, float param);
		public delegate void PFNGLLIGHTMODELFVPROC(uint pname, float[] parameters);
		public delegate void PFNGLLIGHTMODELIPROC(uint pname, int param);
		public delegate void PFNGLLIGHTMODELIVPROC(uint pname, int[] parameters);
		public delegate void PFNGLLIGHTFPROC(uint light, uint pname, float param);
		public delegate void PFNGLLIGHTFVPROC(uint light, uint pname, float[] parameters);
		public delegate void PFNGLLIGHTIPROC(uint light, uint pname, int param);
		public delegate void PFNGLLIGHTIVPROC(uint light, uint pname, int[] parameters);
		public delegate void PFNGLLINESTIPPLEPROC(int factor, ushort pattern);
		public delegate void PFNGLLINEWIDTHPROC(float width);
		public delegate void PFNGLLISTBASEPROC(uint b);
		public delegate void PFNGLLOADIDENTITYPROC();
		public delegate void PFNGLLOADMATRIXDPROC(double[] m);
		public delegate void PFNGLLOADMATRIXFPROC(float[] m);
		public delegate void PFNGLLOADNAMEPROC(uint name);
		public delegate void PFNGLLOGICOPPROC(uint opcode);
		public delegate void PFNGLMAP1DPROC(uint target, double u1, double u2, int stride, int order, double[] points);
		public delegate void PFNGLMAP1FPROC(uint target, float u1, float u2, int stride, int order, float[] points);
		public delegate void PFNGLMAP2DPROC(uint target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double[] points);
		public delegate void PFNGLMAP2FPROC(uint target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float[] points);
		public delegate void PFNGLMAPGRID1DPROC(int un, double u1, double u2);
		public delegate void PFNGLMAPGRID1FPROC(int un, float u1, float u2);
		public delegate void PFNGLMAPGRID2DPROC(int un, double u1, double u2, int vn, double v1, double v2);
		public delegate void PFNGLMAPGRID2FPROC(int un, float u1, float u2, int vn, float v1, float v2);
		public delegate void PFNGLMATERIALFPROC(uint face, uint pname, float param);
		public delegate void PFNGLMATERIALFVPROC(uint face, uint pname, float[] parameters);
		public delegate void PFNGLMATERIALIPROC(uint face, uint pname, int param);
		public delegate void PFNGLMATERIALIVPROC(uint face, uint pname, int[] parameters);
		public delegate void PFNGLMATRIXMODEPROC(uint mode);
		public delegate void PFNGLMULTMATRIXDPROC(double[] m);
		public delegate void PFNGLMULTMATRIXFPROC(float[] m);
		public delegate void PFNGLNEWLISTPROC(uint list, uint mode);
		public delegate void PFNGLNORMAL3BPROC(byte nx, byte ny, byte nz);
		public delegate void PFNGLNORMAL3BVPROC([In] [MarshalAs(UnmanagedType.LPStr)] string v);
		public delegate void PFNGLNORMAL3DPROC(double nx, double ny, double nz);
		public delegate void PFNGLNORMAL3DVPROC(double[] v);
		public delegate void PFNGLNORMAL3FPROC(float nx, float ny, float nz);
		public delegate void PFNGLNORMAL3FVPROC(float[] v);
		public delegate void PFNGLNORMAL3IPROC(int nx, int ny, int nz);
		public delegate void PFNGLNORMAL3IVPROC(int[] v);
		public delegate void PFNGLNORMAL3SPROC(short nx, short ny, short nz);
		public delegate void PFNGLNORMAL3SVPROC(short[] v);
		public delegate void PFNGLNORMALPOINTERPROC(uint type, int stride, IntPtr pointer);
		public delegate void PFNGLORTHOPROC(double left, double right, double bottom, double top, double zNear, double zFar);
		public delegate void PFNGLPASSTHROUGHPROC(float token);
		public delegate void PFNGLPIXELMAPFVPROC(uint map, int mapsize, float[] values);
		public delegate void PFNGLPIXELMAPUIVPROC(uint map, int mapsize, uint[] values);
		public delegate void PFNGLPIXELMAPUSVPROC(uint map, int mapsize, ushort[] values);
		public delegate void PFNGLPIXELSTOREFPROC(uint pname, float param);
		public delegate void PFNGLPIXELSTOREIPROC(uint pname, int param);
		public delegate void PFNGLPIXELTRANSFERFPROC(uint pname, float param);
		public delegate void PFNGLPIXELTRANSFERIPROC(uint pname, int param);
		public delegate void PFNGLPIXELZOOMPROC(float xfactor, float yfactor);
		public delegate void PFNGLPOINTSIZEPROC(float size);
		public delegate void PFNGLPOLYGONMODEPROC(uint face, uint mode);
		public delegate void PFNGLPOLYGONOFFSETPROC(float factor, float units);
		public delegate void PFNGLPOLYGONSTIPPLEPROC([In] [MarshalAs(UnmanagedType.LPStr)] string mask);
		public delegate void PFNGLPOPATTRIBPROC();
		public delegate void PFNGLPOPCLIENTATTRIBPROC();
		public delegate void PFNGLPOPMATRIXPROC();
		public delegate void PFNGLPOPNAMEPROC();
		public delegate void PFNGLPRIORITIZETEXTURESPROC(int n, uint[] textures, float[] priorities);
		public delegate void PFNGLPUSHATTRIBPROC(uint mask);
		public delegate void PFNGLPUSHCLIENTATTRIBPROC(uint mask);
		public delegate void PFNGLPUSHMATRIXPROC();
		public delegate void PFNGLPUSHNAMEPROC(uint name);
		public delegate void PFNGLRASTERPOS2DPROC(double x, double y);
		public delegate void PFNGLRASTERPOS2DVPROC(double[] v);
		public delegate void PFNGLRASTERPOS2FPROC(float x, float y);
		public delegate void PFNGLRASTERPOS2FVPROC(float[] v);
		public delegate void PFNGLRASTERPOS2IPROC(int x, int y);
		public delegate void PFNGLRASTERPOS2IVPROC(int[] v);
		public delegate void PFNGLRASTERPOS2SPROC(short x, short y);
		public delegate void PFNGLRASTERPOS2SVPROC(short[] v);
		public delegate void PFNGLRASTERPOS3DPROC(double x, double y, double z);
		public delegate void PFNGLRASTERPOS3DVPROC(double[] v);
		public delegate void PFNGLRASTERPOS3FPROC(float x, float y, float z);
		public delegate void PFNGLRASTERPOS3FVPROC(float[] v);
		public delegate void PFNGLRASTERPOS3IPROC(int x, int y, int z);
		public delegate void PFNGLRASTERPOS3IVPROC(int[] v);
		public delegate void PFNGLRASTERPOS3SPROC(short x, short y, short z);
		public delegate void PFNGLRASTERPOS3SVPROC(short[] v);
		public delegate void PFNGLRASTERPOS4DPROC(double x, double y, double z, double w);
		public delegate void PFNGLRASTERPOS4DVPROC(double[] v);
		public delegate void PFNGLRASTERPOS4FPROC(float x, float y, float z, float w);
		public delegate void PFNGLRASTERPOS4FVPROC(float[] v);
		public delegate void PFNGLRASTERPOS4IPROC(int x, int y, int z, int w);
		public delegate void PFNGLRASTERPOS4IVPROC(int[] v);
		public delegate void PFNGLRASTERPOS4SPROC(short x, short y, short z, short w);
		public delegate void PFNGLRASTERPOS4SVPROC(short[] v);
		public delegate void PFNGLREADBUFFERPROC(uint mode);
		public delegate void PFNGLREADPIXELSPROC(int x, int y, int width, int height, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLRECTDPROC(double x1, double y1, double x2, double y2);
		public delegate void PFNGLRECTDVPROC(double[] v1, double[] v2);
		public delegate void PFNGLRECTFPROC(float x1, float y1, float x2, float y2);
		public delegate void PFNGLRECTFVPROC(float[] v1, float[] v2);
		public delegate void PFNGLRECTIPROC(int x1, int y1, int x2, int y2);
		public delegate void PFNGLRECTIVPROC(int[] v1, int[] v2);
		public delegate void PFNGLRECTSPROC(short x1, short y1, short x2, short y2);
		public delegate void PFNGLRECTSVPROC(short[] v1, short[] v2);
		public delegate int PFNGLRENDERMODEPROC(uint mode);
		public delegate void PFNGLROTATEDPROC(double angle, double x, double y, double z);
		public delegate void PFNGLROTATEFPROC(float angle, float x, float y, float z);
		public delegate void PFNGLSCALEDPROC(double x, double y, double z);
		public delegate void PFNGLSCALEFPROC(float x, float y, float z);
		public delegate void PFNGLSCISSORPROC(int x, int y, int width, int height);
		public delegate void PFNGLSELECTBUFFERPROC(int size, uint[] buffer);
		public delegate void PFNGLSHADEMODELPROC(uint mode);
		public delegate void PFNGLSTENCILFUNCPROC(uint func, int refer, uint mask);
		public delegate void PFNGLSTENCILMASKPROC(uint mask);
		public delegate void PFNGLSTENCILOPPROC(uint fail, uint zfail, uint zpass);
		public delegate void PFNGLTEXCOORD1DPROC(double s);
		public delegate void PFNGLTEXCOORD1DVPROC(double[] v);
		public delegate void PFNGLTEXCOORD1FPROC(float s);
		public delegate void PFNGLTEXCOORD1FVPROC(float[] v);
		public delegate void PFNGLTEXCOORD1IPROC(int s);
		public delegate void PFNGLTEXCOORD1IVPROC(int[] v);
		public delegate void PFNGLTEXCOORD1SPROC(short s);
		public delegate void PFNGLTEXCOORD1SVPROC(short[] v);
		public delegate void PFNGLTEXCOORD2DPROC(double s, double t);
		public delegate void PFNGLTEXCOORD2DVPROC(double[] v);
		public delegate void PFNGLTEXCOORD2FPROC(float s, float t);
		public delegate void PFNGLTEXCOORD2FVPROC(float[] v);
		public delegate void PFNGLTEXCOORD2IPROC(int s, int t);
		public delegate void PFNGLTEXCOORD2IVPROC(int[] v);
		public delegate void PFNGLTEXCOORD2SPROC(short s, short t);
		public delegate void PFNGLTEXCOORD2SVPROC(short[] v);
		public delegate void PFNGLTEXCOORD3DPROC(double s, double t, double r);
		public delegate void PFNGLTEXCOORD3DVPROC(double[] v);
		public delegate void PFNGLTEXCOORD3FPROC(float s, float t, float r);
		public delegate void PFNGLTEXCOORD3FVPROC(float[] v);
		public delegate void PFNGLTEXCOORD3IPROC(int s, int t, int r);
		public delegate void PFNGLTEXCOORD3IVPROC(int[] v);
		public delegate void PFNGLTEXCOORD3SPROC(short s, short t, short r);
		public delegate void PFNGLTEXCOORD3SVPROC(short[] v);
		public delegate void PFNGLTEXCOORD4DPROC(double s, double t, double r, double q);
		public delegate void PFNGLTEXCOORD4DVPROC(double[] v);
		public delegate void PFNGLTEXCOORD4FPROC(float s, float t, float r, float q);
		public delegate void PFNGLTEXCOORD4FVPROC(float[] v);
		public delegate void PFNGLTEXCOORD4IPROC(int s, int t, int r, int q);
		public delegate void PFNGLTEXCOORD4IVPROC(int[] v);
		public delegate void PFNGLTEXCOORD4SPROC(short s, short t, short r, short q);
		public delegate void PFNGLTEXCOORD4SVPROC(short[] v);
		public delegate void PFNGLTEXCOORDPOINTERPROC(int size, uint type, int stride, IntPtr pointer);
		public delegate void PFNGLTEXENVFPROC(uint target, uint pname, float param);
		public delegate void PFNGLTEXENVFVPROC(uint target, uint pname, float[] parameters);
		public delegate void PFNGLTEXENVIPROC(uint target, uint pname, int param);
		public delegate void PFNGLTEXENVIVPROC(uint target, uint pname, int[] parameters);
		public delegate void PFNGLTEXGENDPROC(uint coord, uint pname, double param);
		public delegate void PFNGLTEXGENDVPROC(uint coord, uint pname, double[] parameters);
		public delegate void PFNGLTEXGENFPROC(uint coord, uint pname, float param);
		public delegate void PFNGLTEXGENFVPROC(uint coord, uint pname, float[] parameters);
		public delegate void PFNGLTEXGENIPROC(uint coord, uint pname, int param);
		public delegate void PFNGLTEXGENIVPROC(uint coord, uint pname, int[] parameters);
		public delegate void PFNGLTEXIMAGE1DPROC(uint target, int level, int internalformat, int width, int border, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTEXIMAGE2DPROC(uint target, int level, int internalformat, int width, int height, int border, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTEXPARAMETERFPROC(uint target, uint pname, float param);
		public delegate void PFNGLTEXPARAMETERFVPROC(uint target, uint pname, float[] parameters);
		public delegate void PFNGLTEXPARAMETERIPROC(uint target, uint pname, int param);
		public delegate void PFNGLTEXPARAMETERIVPROC(uint target, uint pname, int[] parameters);
		public delegate void PFNGLTEXSUBIMAGE1DPROC(uint target, int level, int xoffset, int width, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTEXSUBIMAGE2DPROC(uint target, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, IntPtr pixels);
		public delegate void PFNGLTRANSLATEDPROC(double x, double y, double z);
		public delegate void PFNGLTRANSLATEFPROC(float x, float y, float z);
		public delegate void PFNGLVERTEX2DPROC(double x, double y);
		public delegate void PFNGLVERTEX2DVPROC(double[] v);
		public delegate void PFNGLVERTEX2FPROC(float x, float y);
		public delegate void PFNGLVERTEX2FVPROC(float[] v);
		public delegate void PFNGLVERTEX2IPROC(int x, int y);
		public delegate void PFNGLVERTEX2IVPROC(int[] v);
		public delegate void PFNGLVERTEX2SPROC(short x, short y);
		public delegate void PFNGLVERTEX2SVPROC(short[] v);
		public delegate void PFNGLVERTEX3DPROC(double x, double y, double z);
		public delegate void PFNGLVERTEX3DVPROC(double[] v);
		public delegate void PFNGLVERTEX3FPROC(float x, float y, float z);
		public delegate void PFNGLVERTEX3FVPROC(float[] v);
		public delegate void PFNGLVERTEX3IPROC(int x, int y, int z);
		public delegate void PFNGLVERTEX3IVPROC(int[] v);
		public delegate void PFNGLVERTEX3SPROC(short x, short y, short z);
		public delegate void PFNGLVERTEX3SVPROC(short[] v);
		public delegate void PFNGLVERTEX4DPROC(double x, double y, double z, double w);
		public delegate void PFNGLVERTEX4DVPROC(double[] v);
		public delegate void PFNGLVERTEX4FPROC(float x, float y, float z, float w);
		public delegate void PFNGLVERTEX4FVPROC(float[] v);
		public delegate void PFNGLVERTEX4IPROC(int x, int y, int z, int w);
		public delegate void PFNGLVERTEX4IVPROC(int[] v);
		public delegate void PFNGLVERTEX4SPROC(short x, short y, short z, short w);
		public delegate void PFNGLVERTEX4SVPROC(short[] v);
		public delegate void PFNGLVERTEXPOINTERPROC(int size, uint type, int stride, IntPtr pointer);
		public delegate void PFNGLVIEWPORTPROC(int x, int y, int width, int height);
		public delegate IntPtr PFNGLGETSTRINGPROC(uint name);
		#endregion

		#region Methods
		public static PFNGLACCUMPROC glAccum;
		public static PFNGLALPHAFUNCPROC glAlphaFunc;
		public static PFNGLARETEXTURESRESIDENTPROC glAreTexturesResident;
		public static PFNGLARRAYELEMENTPROC glArrayElement;
		public static PFNGLBEGINPROC glBegin;
		public static PFNGLBINDTEXTUREPROC glBindTexture;
		public static PFNGLBITMAPPROC glBitmap;
		public static PFNGLBLENDFUNCPROC glBlendFunc;
		public static PFNGLCALLLISTPROC glCallList;
		public static PFNGLCALLLISTSPROC glCallLists;
		public static PFNGLCLEARPROC glClear;
		public static PFNGLCLEARACCUMPROC glClearAccum;
		public static PFNGLCLEARCOLORPROC glClearColor;
		public static PFNGLCLEARDEPTHPROC glClearDepth;
		public static PFNGLCLEARINDEXPROC glClearIndex;
		public static PFNGLCLEARSTENCILPROC glClearStencil;
		public static PFNGLCLIPPLANEPROC glClipPlane;
		public static PFNGLCOLOR3BPROC glColor3b;
		public static PFNGLCOLOR3BVPROC glColor3bv;
		public static PFNGLCOLOR3DPROC glColor3d;
		public static PFNGLCOLOR3DVPROC glColor3dv;
		public static PFNGLCOLOR3FPROC glColor3f;
		public static PFNGLCOLOR3FVPROC glColor3fv;
		public static PFNGLCOLOR3IPROC glColor3i;
		public static PFNGLCOLOR3IVPROC glColor3iv;
		public static PFNGLCOLOR3SPROC glColor3s;
		public static PFNGLCOLOR3SVPROC glColor3sv;
		public static PFNGLCOLOR3UBPROC glColor3ub;
		public static PFNGLCOLOR3UBVPROC glColor3ubv;
		public static PFNGLCOLOR3UIPROC glColor3ui;
		public static PFNGLCOLOR3UIVPROC glColor3uiv;
		public static PFNGLCOLOR3USPROC glColor3us;
		public static PFNGLCOLOR3USVPROC glColor3usv;
		public static PFNGLCOLOR4BPROC glColor4b;
		public static PFNGLCOLOR4BVPROC glColor4bv;
		public static PFNGLCOLOR4DPROC glColor4d;
		public static PFNGLCOLOR4DVPROC glColor4dv;
		public static PFNGLCOLOR4FPROC glColor4f;
		public static PFNGLCOLOR4FVPROC glColor4fv;
		public static PFNGLCOLOR4IPROC glColor4i;
		public static PFNGLCOLOR4IVPROC glColor4iv;
		public static PFNGLCOLOR4SPROC glColor4s;
		public static PFNGLCOLOR4SVPROC glColor4sv;
		public static PFNGLCOLOR4UBPROC glColor4ub;
		public static PFNGLCOLOR4UBVPROC glColor4ubv;
		public static PFNGLCOLOR4UIPROC glColor4ui;
		public static PFNGLCOLOR4UIVPROC glColor4uiv;
		public static PFNGLCOLOR4USPROC glColor4us;
		public static PFNGLCOLOR4USVPROC glColor4usv;
		public static PFNGLCOLORMASKPROC glColorMask;
		public static PFNGLCOLORMATERIALPROC glColorMaterial;
		public static PFNGLCOLORPOINTERPROC glColorPointer;
		public static PFNGLCOPYPIXELSPROC glCopyPixels;
		public static PFNGLCOPYTEXIMAGE1DPROC glCopyTexImage1D;
		public static PFNGLCOPYTEXIMAGE2DPROC glCopyTexImage2D;
		public static PFNGLCOPYTEXSUBIMAGE1DPROC glCopyTexSubImage1D;
		public static PFNGLCOPYTEXSUBIMAGE2DPROC glCopyTexSubImage2D;
		public static PFNGLCULLFACEPROC glCullFace;
		public static PFNGLDELETELISTSPROC glDeleteLists;
		public static PFNGLDELETETEXTURESPROC glDeleteTextures;
		public static PFNGLDEPTHFUNCPROC glDepthFunc;
		public static PFNGLDEPTHMASKPROC glDepthMask;
		public static PFNGLDEPTHRANGEPROC glDepthRange;
		public static PFNGLDISABLEPROC glDisable;
		public static PFNGLDISABLECLIENTSTATEPROC glDisableClientState;
		public static PFNGLDRAWARRAYSPROC glDrawArrays;
		public static PFNGLDRAWBUFFERPROC glDrawBuffer;
		public static PFNGLDRAWELEMENTSPROC glDrawElements;
		public static PFNGLDRAWPIXELSPROC glDrawPixels;
		public static PFNGLEDGEFLAGPROC glEdgeFlag;
		public static PFNGLEDGEFLAGPOINTERPROC glEdgeFlagPointer;
		public static PFNGLEDGEFLAGVPROC glEdgeFlagv;
		public static PFNGLENABLEPROC glEnable;
		public static PFNGLENABLECLIENTSTATEPROC glEnableClientState;
		public static PFNGLENDPROC glEnd;
		public static PFNGLENDLISTPROC glEndList;
		public static PFNGLEVALCOORD1DPROC glEvalCoord1d;
		public static PFNGLEVALCOORD1DVPROC glEvalCoord1dv;
		public static PFNGLEVALCOORD1FPROC glEvalCoord1f;
		public static PFNGLEVALCOORD1FVPROC glEvalCoord1fv;
		public static PFNGLEVALCOORD2DPROC glEvalCoord2d;
		public static PFNGLEVALCOORD2DVPROC glEvalCoord2dv;
		public static PFNGLEVALCOORD2FPROC glEvalCoord2f;
		public static PFNGLEVALCOORD2FVPROC glEvalCoord2fv;
		public static PFNGLEVALMESH1PROC glEvalMesh1;
		public static PFNGLEVALMESH2PROC glEvalMesh2;
		public static PFNGLEVALPOINT1PROC glEvalPoint1;
		public static PFNGLEVALPOINT2PROC glEvalPoint2;
		public static PFNGLFEEDBACKBUFFERPROC glFeedbackBuffer;
		public static PFNGLFINISHPROC glFinish;
		public static PFNGLFLUSHPROC glFlush;
		public static PFNGLFOGFPROC glFogf;
		public static PFNGLFOGFVPROC glFogfv;
		public static PFNGLFOGIPROC glFogi;
		public static PFNGLFOGIVPROC glFogiv;
		public static PFNGLFRONTFACEPROC glFrontFace;
		public static PFNGLFRUSTUMPROC glFrustum;
		public static PFNGLGENLISTSPROC glGenLists;
		public static PFNGLGENTEXTURESPROC glGenTextures;
		public static PFNGLGETBOOLEANVPROC glGetBooleanv;
		public static PFNGLGETCLIPPLANEPROC glGetClipPlane;
		public static PFNGLGETDOUBLEVPROC glGetDoublev;
		public static PFNGLGETERRORPROC glGetError;
		public static PFNGLGETFLOATVPROC glGetFloatv;
		public static PFNGLGETINTEGERVPROC glGetIntegerv;
		public static PFNGLGETLIGHTFVPROC glGetLightfv;
		public static PFNGLGETLIGHTIVPROC glGetLightiv;
		public static PFNGLGETMAPDVPROC glGetMapdv;
		public static PFNGLGETMAPFVPROC glGetMapfv;
		public static PFNGLGETMAPIVPROC glGetMapiv;
		public static PFNGLGETMATERIALFVPROC glGetMaterialfv;
		public static PFNGLGETMATERIALIVPROC glGetMaterialiv;
		public static PFNGLGETPIXELMAPFVPROC glGetPixelMapfv;
		public static PFNGLGETPIXELMAPUIVPROC glGetPixelMapuiv;
		public static PFNGLGETPIXELMAPUSVPROC glGetPixelMapusv;
		public static PFNGLGETPOINTERVPROC glGetPointerv;
		public static PFNGLGETPOLYGONSTIPPLEPROC glGetPolygonStipple;
		public static PFNGLGETSTRINGPROC glGetString;
		public static PFNGLGETTEXENVFVPROC glGetTexEnvfv;
		public static PFNGLGETTEXENVIVPROC glGetTexEnviv;
		public static PFNGLGETTEXGENDVPROC glGetTexGendv;
		public static PFNGLGETTEXGENFVPROC glGetTexGenfv;
		public static PFNGLGETTEXGENIVPROC glGetTexGeniv;
		public static PFNGLGETTEXIMAGEPROC glGetTexImage;
		public static PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
		public static PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
		public static PFNGLGETTEXPARAMETERFVPROC glGetTexParameterfv;
		public static PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
		public static PFNGLHINTPROC glHint;
		public static PFNGLINDEXMASKPROC glIndexMask;
		public static PFNGLINDEXPOINTERPROC glIndexPointer;
		public static PFNGLINDEXDPROC glIndexd;
		public static PFNGLINDEXDVPROC glIndexdv;
		public static PFNGLINDEXFPROC glIndexf;
		public static PFNGLINDEXFVPROC glIndexfv;
		public static PFNGLINDEXIPROC glIndexi;
		public static PFNGLINDEXIVPROC glIndexiv;
		public static PFNGLINDEXSPROC glIndexs;
		public static PFNGLINDEXSVPROC glIndexsv;
		public static PFNGLINDEXUBPROC glIndexub;
		public static PFNGLINDEXUBVPROC glIndexubv;
		public static PFNGLINITNAMESPROC glInitNames;
		public static PFNGLINTERLEAVEDARRAYSPROC glInterleavedArrays;
		public static PFNGLISENABLEDPROC glIsEnabled;
		public static PFNGLISLISTPROC glIsList;
		public static PFNGLISTEXTUREPROC glIsTexture;
		public static PFNGLLIGHTMODELFPROC glLightModelf;
		public static PFNGLLIGHTMODELFVPROC glLightModelfv;
		public static PFNGLLIGHTMODELIPROC glLightModeli;
		public static PFNGLLIGHTMODELIVPROC glLightModeliv;
		public static PFNGLLIGHTFPROC glLightf;
		public static PFNGLLIGHTFVPROC glLightfv;
		public static PFNGLLIGHTIPROC glLighti;
		public static PFNGLLIGHTIVPROC glLightiv;
		public static PFNGLLINESTIPPLEPROC glLineStipple;
		public static PFNGLLINEWIDTHPROC glLineWidth;
		public static PFNGLLISTBASEPROC glListBase;
		public static PFNGLLOADIDENTITYPROC glLoadIdentity;
		public static PFNGLLOADMATRIXDPROC glLoadMatrixd;
		public static PFNGLLOADMATRIXFPROC glLoadMatrixf;
		public static PFNGLLOADNAMEPROC glLoadName;
		public static PFNGLLOGICOPPROC glLogicOp;
		public static PFNGLMAP1DPROC glMap1d;
		public static PFNGLMAP1FPROC glMap1f;
		public static PFNGLMAP2DPROC glMap2d;
		public static PFNGLMAP2FPROC glMap2f;
		public static PFNGLMAPGRID1DPROC glMapGrid1d;
		public static PFNGLMAPGRID1FPROC glMapGrid1f;
		public static PFNGLMAPGRID2DPROC glMapGrid2d;
		public static PFNGLMAPGRID2FPROC glMapGrid2f;
		public static PFNGLMATERIALFPROC glMaterialf;
		public static PFNGLMATERIALFVPROC glMaterialfv;
		public static PFNGLMATERIALIPROC glMateriali;
		public static PFNGLMATERIALIVPROC glMaterialiv;
		public static PFNGLMATRIXMODEPROC glMatrixMode;
		public static PFNGLMULTMATRIXDPROC glMultMatrixd;
		public static PFNGLMULTMATRIXFPROC glMultMatrixf;
		public static PFNGLNEWLISTPROC glNewList;
		public static PFNGLNORMAL3BPROC glNormal3b;
		public static PFNGLNORMAL3BVPROC glNormal3bv;
		public static PFNGLNORMAL3DPROC glNormal3d;
		public static PFNGLNORMAL3DVPROC glNormal3dv;
		public static PFNGLNORMAL3FPROC glNormal3f;
		public static PFNGLNORMAL3FVPROC glNormal3fv;
		public static PFNGLNORMAL3IPROC glNormal3i;
		public static PFNGLNORMAL3IVPROC glNormal3iv;
		public static PFNGLNORMAL3SPROC glNormal3s;
		public static PFNGLNORMAL3SVPROC glNormal3sv;
		public static PFNGLNORMALPOINTERPROC glNormalPointer;
		public static PFNGLORTHOPROC glOrtho;
		public static PFNGLPASSTHROUGHPROC glPassThrough;
		public static PFNGLPIXELMAPFVPROC glPixelMapfv;
		public static PFNGLPIXELMAPUIVPROC glPixelMapuiv;
		public static PFNGLPIXELMAPUSVPROC glPixelMapusv;
		public static PFNGLPIXELSTOREFPROC glPixelStoref;
		public static PFNGLPIXELSTOREIPROC glPixelStorei;
		public static PFNGLPIXELTRANSFERFPROC glPixelTransferf;
		public static PFNGLPIXELTRANSFERIPROC glPixelTransferi;
		public static PFNGLPIXELZOOMPROC glPixelZoom;
		public static PFNGLPOINTSIZEPROC glPointSize;
		public static PFNGLPOLYGONMODEPROC glPolygonMode;
		public static PFNGLPOLYGONOFFSETPROC glPolygonOffset;
		public static PFNGLPOLYGONSTIPPLEPROC glPolygonStipple;
		public static PFNGLPOPATTRIBPROC glPopAttrib;
		public static PFNGLPOPCLIENTATTRIBPROC glPopClientAttrib;
		public static PFNGLPOPMATRIXPROC glPopMatrix;
		public static PFNGLPOPNAMEPROC glPopName;
		public static PFNGLPRIORITIZETEXTURESPROC glPrioritizeTextures;
		public static PFNGLPUSHATTRIBPROC glPushAttrib;
		public static PFNGLPUSHCLIENTATTRIBPROC glPushClientAttrib;
		public static PFNGLPUSHMATRIXPROC glPushMatrix;
		public static PFNGLPUSHNAMEPROC glPushName;
		public static PFNGLRASTERPOS2DPROC glRasterPos2d;
		public static PFNGLRASTERPOS2DVPROC glRasterPos2dv;
		public static PFNGLRASTERPOS2FPROC glRasterPos2f;
		public static PFNGLRASTERPOS2FVPROC glRasterPos2fv;
		public static PFNGLRASTERPOS2IPROC glRasterPos2i;
		public static PFNGLRASTERPOS2IVPROC glRasterPos2iv;
		public static PFNGLRASTERPOS2SPROC glRasterPos2s;
		public static PFNGLRASTERPOS2SVPROC glRasterPos2sv;
		public static PFNGLRASTERPOS3DPROC glRasterPos3d;
		public static PFNGLRASTERPOS3DVPROC glRasterPos3dv;
		public static PFNGLRASTERPOS3FPROC glRasterPos3f;
		public static PFNGLRASTERPOS3FVPROC glRasterPos3fv;
		public static PFNGLRASTERPOS3IPROC glRasterPos3i;
		public static PFNGLRASTERPOS3IVPROC glRasterPos3iv;
		public static PFNGLRASTERPOS3SPROC glRasterPos3s;
		public static PFNGLRASTERPOS3SVPROC glRasterPos3sv;
		public static PFNGLRASTERPOS4DPROC glRasterPos4d;
		public static PFNGLRASTERPOS4DVPROC glRasterPos4dv;
		public static PFNGLRASTERPOS4FPROC glRasterPos4f;
		public static PFNGLRASTERPOS4FVPROC glRasterPos4fv;
		public static PFNGLRASTERPOS4IPROC glRasterPos4i;
		public static PFNGLRASTERPOS4IVPROC glRasterPos4iv;
		public static PFNGLRASTERPOS4SPROC glRasterPos4s;
		public static PFNGLRASTERPOS4SVPROC glRasterPos4sv;
		public static PFNGLREADBUFFERPROC glReadBuffer;
		public static PFNGLREADPIXELSPROC glReadPixels;
		public static PFNGLRECTDPROC glRectd;
		public static PFNGLRECTDVPROC glRectdv;
		public static PFNGLRECTFPROC glRectf;
		public static PFNGLRECTFVPROC glRectfv;
		public static PFNGLRECTIPROC glRecti;
		public static PFNGLRECTIVPROC glRectiv;
		public static PFNGLRECTSPROC glRects;
		public static PFNGLRECTSVPROC glRectsv;
		public static PFNGLRENDERMODEPROC glRenderMode;
		public static PFNGLROTATEDPROC glRotated;
		public static PFNGLROTATEFPROC glRotatef;
		public static PFNGLSCALEDPROC glScaled;
		public static PFNGLSCALEFPROC glScalef;
		public static PFNGLSCISSORPROC glScissor;
		public static PFNGLSELECTBUFFERPROC glSelectBuffer;
		public static PFNGLSHADEMODELPROC glShadeModel;
		public static PFNGLSTENCILFUNCPROC glStencilFunc;
		public static PFNGLSTENCILMASKPROC glStencilMask;
		public static PFNGLSTENCILOPPROC glStencilOp;
		public static PFNGLTEXCOORD1DPROC glTexCoord1d;
		public static PFNGLTEXCOORD1DVPROC glTexCoord1dv;
		public static PFNGLTEXCOORD1FPROC glTexCoord1f;
		public static PFNGLTEXCOORD1FVPROC glTexCoord1fv;
		public static PFNGLTEXCOORD1IPROC glTexCoord1i;
		public static PFNGLTEXCOORD1IVPROC glTexCoord1iv;
		public static PFNGLTEXCOORD1SPROC glTexCoord1s;
		public static PFNGLTEXCOORD1SVPROC glTexCoord1sv;
		public static PFNGLTEXCOORD2DPROC glTexCoord2d;
		public static PFNGLTEXCOORD2DVPROC glTexCoord2dv;
		public static PFNGLTEXCOORD2FPROC glTexCoord2f;
		public static PFNGLTEXCOORD2FVPROC glTexCoord2fv;
		public static PFNGLTEXCOORD2IPROC glTexCoord2i;
		public static PFNGLTEXCOORD2IVPROC glTexCoord2iv;
		public static PFNGLTEXCOORD2SPROC glTexCoord2s;
		public static PFNGLTEXCOORD2SVPROC glTexCoord2sv;
		public static PFNGLTEXCOORD3DPROC glTexCoord3d;
		public static PFNGLTEXCOORD3DVPROC glTexCoord3dv;
		public static PFNGLTEXCOORD3FPROC glTexCoord3f;
		public static PFNGLTEXCOORD3FVPROC glTexCoord3fv;
		public static PFNGLTEXCOORD3IPROC glTexCoord3i;
		public static PFNGLTEXCOORD3IVPROC glTexCoord3iv;
		public static PFNGLTEXCOORD3SPROC glTexCoord3s;
		public static PFNGLTEXCOORD3SVPROC glTexCoord3sv;
		public static PFNGLTEXCOORD4DPROC glTexCoord4d;
		public static PFNGLTEXCOORD4DVPROC glTexCoord4dv;
		public static PFNGLTEXCOORD4FPROC glTexCoord4f;
		public static PFNGLTEXCOORD4FVPROC glTexCoord4fv;
		public static PFNGLTEXCOORD4IPROC glTexCoord4i;
		public static PFNGLTEXCOORD4IVPROC glTexCoord4iv;
		public static PFNGLTEXCOORD4SPROC glTexCoord4s;
		public static PFNGLTEXCOORD4SVPROC glTexCoord4sv;
		public static PFNGLTEXCOORDPOINTERPROC glTexCoordPointer;
		public static PFNGLTEXENVFPROC glTexEnvf;
		public static PFNGLTEXENVFVPROC glTexEnvfv;
		public static PFNGLTEXENVIPROC glTexEnvi;
		public static PFNGLTEXENVIVPROC glTexEnviv;
		public static PFNGLTEXGENDPROC glTexGend;
		public static PFNGLTEXGENDVPROC glTexGendv;
		public static PFNGLTEXGENFPROC glTexGenf;
		public static PFNGLTEXGENFVPROC glTexGenfv;
		public static PFNGLTEXGENIPROC glTexGeni;
		public static PFNGLTEXGENIVPROC glTexGeniv;
		public static PFNGLTEXIMAGE1DPROC glTexImage1D;
		public static PFNGLTEXIMAGE2DPROC glTexImage2D;
		public static PFNGLTEXPARAMETERFPROC glTexParameterf;
		public static PFNGLTEXPARAMETERFVPROC glTexParameterfv;
		public static PFNGLTEXPARAMETERIPROC glTexParameteri;
		public static PFNGLTEXPARAMETERIVPROC glTexParameteriv;
		public static PFNGLTEXSUBIMAGE1DPROC glTexSubImage1D;
		public static PFNGLTEXSUBIMAGE2DPROC glTexSubImage2D;
		public static PFNGLTRANSLATEDPROC glTranslated;
		public static PFNGLTRANSLATEFPROC glTranslatef;
		public static PFNGLVERTEX2DPROC glVertex2d;
		public static PFNGLVERTEX2DVPROC glVertex2dv;
		public static PFNGLVERTEX2FPROC glVertex2f;
		public static PFNGLVERTEX2FVPROC glVertex2fv;
		public static PFNGLVERTEX2IPROC glVertex2i;
		public static PFNGLVERTEX2IVPROC glVertex2iv;
		public static PFNGLVERTEX2SPROC glVertex2s;
		public static PFNGLVERTEX2SVPROC glVertex2sv;
		public static PFNGLVERTEX3DPROC glVertex3d;
		public static PFNGLVERTEX3DVPROC glVertex3dv;
		public static PFNGLVERTEX3FPROC glVertex3f;
		public static PFNGLVERTEX3FVPROC glVertex3fv;
		public static PFNGLVERTEX3IPROC glVertex3i;
		public static PFNGLVERTEX3IVPROC glVertex3iv;
		public static PFNGLVERTEX3SPROC glVertex3s;
		public static PFNGLVERTEX3SVPROC glVertex3sv;
		public static PFNGLVERTEX4DPROC glVertex4d;
		public static PFNGLVERTEX4DVPROC glVertex4dv;
		public static PFNGLVERTEX4FPROC glVertex4f;
		public static PFNGLVERTEX4FVPROC glVertex4fv;
		public static PFNGLVERTEX4IPROC glVertex4i;
		public static PFNGLVERTEX4IVPROC glVertex4iv;
		public static PFNGLVERTEX4SPROC glVertex4s;
		public static PFNGLVERTEX4SVPROC glVertex4sv;
		public static PFNGLVERTEXPOINTERPROC glVertexPointer;
		public static PFNGLVIEWPORTPROC glViewport;
		#endregion
	}
}
