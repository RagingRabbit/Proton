using System;

namespace Proton
{
    static class GL41
    {
        #region Constants
        public const uint GL_FIXED = 5132;
        public const uint GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738;
        public const uint GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
        public const uint GL_LOW_FLOAT = 36336;
        public const uint GL_MEDIUM_FLOAT = 36337;
        public const uint GL_HIGH_FLOAT = 36338;
        public const uint GL_LOW_INT = 36339;
        public const uint GL_MEDIUM_INT = 36340;
        public const uint GL_HIGH_INT = 36341;
        public const uint GL_SHADER_COMPILER = 36346;
        public const uint GL_SHADER_BINARY_FORMATS = 36344;
        public const uint GL_NUM_SHADER_BINARY_FORMATS = 36345;
        public const uint GL_MAX_VERTEX_UNIFORM_VECTORS = 36347;
        public const uint GL_MAX_VARYING_VECTORS = 36348;
        public const uint GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
        public const uint GL_RGB565 = 36194;
        public const uint GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 33367;
        public const uint GL_PROGRAM_BINARY_LENGTH = 34625;
        public const uint GL_NUM_PROGRAM_BINARY_FORMATS = 34814;
        public const uint GL_PROGRAM_BINARY_FORMATS = 34815;
        public const int GL_VERTEX_SHADER_BIT = 1;
        public const int GL_FRAGMENT_SHADER_BIT = 2;
        public const int GL_GEOMETRY_SHADER_BIT = 4;
        public const int GL_TESS_CONTROL_SHADER_BIT = 8;
        public const int GL_TESS_EVALUATION_SHADER_BIT = 16;
        public const int GL_ALL_SHADER_BITS = -1;
        public const uint GL_PROGRAM_SEPARABLE = 33368;
        public const uint GL_ACTIVE_PROGRAM = 33369;
        public const uint GL_PROGRAM_PIPELINE_BINDING = 33370;
        public const uint GL_MAX_VIEWPORTS = 33371;
        public const uint GL_VIEWPORT_SUBPIXEL_BITS = 33372;
        public const uint GL_VIEWPORT_BOUNDS_RANGE = 33373;
        public const uint GL_LAYER_PROVOKING_VERTEX = 33374;
        public const uint GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 33375;
        public const uint GL_UNDEFINED_VERTEX = 33376;
        #endregion

        #region Delegates
        public delegate void PFNGLRELEASESHADERCOMPILERPROC();
        public delegate void PFNGLSHADERBINARYPROC(int count, ref uint shaders, uint binaryformat, IntPtr binary, int length);
        public delegate void PFNGLGETSHADERPRECISIONFORMATPROC(uint shadertype, uint precisiontype, ref int range, ref int precision);
        public delegate void PFNGLDEPTHRANGEFPROC(float n, float f);
        public delegate void PFNGLCLEARDEPTHFPROC(float d);
        public delegate void PFNGLGETPROGRAMBINARYPROC(uint program, int bufSize, ref int length, ref uint binaryFormat, IntPtr binary);
        public delegate void PFNGLPROGRAMBINARYPROC(uint program, uint binaryFormat, IntPtr binary, int length);
        public delegate void PFNGLPROGRAMPARAMETERIPROC(uint program, uint pname, int value);
        public delegate void PFNGLUSEPROGRAMSTAGESPROC(uint pipeline, uint stages, uint program);
        public delegate void PFNGLACTIVESHADERPROGRAMPROC(uint pipeline, uint program);
        public delegate uint PFNGLCREATESHADERPROGRAMVPROC(uint type, int count, IntPtr strings);
        public delegate void PFNGLBINDPROGRAMPIPELINEPROC(uint pipeline);
        public delegate void PFNGLDELETEPROGRAMPIPELINESPROC(int n, ref uint pipelines);
        public delegate void PFNGLGENPROGRAMPIPELINESPROC(int n, ref uint pipelines);
        public delegate byte PFNGLISPROGRAMPIPELINEPROC(uint pipeline);
        public delegate void PFNGLGETPROGRAMPIPELINEIVPROC(uint pipeline, uint pname, ref int parameters);
        public delegate void PFNGLPROGRAMUNIFORM1IPROC(uint program, int location, int v0);
        public delegate void PFNGLPROGRAMUNIFORM1IVPROC(uint program, int location, int count, ref int value);
        public delegate void PFNGLPROGRAMUNIFORM1FPROC(uint program, int location, float v0);
        public delegate void PFNGLPROGRAMUNIFORM1FVPROC(uint program, int location, int count, ref float value);
        public delegate void PFNGLPROGRAMUNIFORM1DPROC(uint program, int location, double v0);
        public delegate void PFNGLPROGRAMUNIFORM1DVPROC(uint program, int location, int count, ref double value);
        public delegate void PFNGLPROGRAMUNIFORM1UIPROC(uint program, int location, uint v0);
        public delegate void PFNGLPROGRAMUNIFORM1UIVPROC(uint program, int location, int count, ref uint value);
        public delegate void PFNGLPROGRAMUNIFORM2IPROC(uint program, int location, int v0, int v1);
        public delegate void PFNGLPROGRAMUNIFORM2IVPROC(uint program, int location, int count, ref int value);
        public delegate void PFNGLPROGRAMUNIFORM2FPROC(uint program, int location, float v0, float v1);
        public delegate void PFNGLPROGRAMUNIFORM2FVPROC(uint program, int location, int count, ref float value);
        public delegate void PFNGLPROGRAMUNIFORM2DPROC(uint program, int location, double v0, double v1);
        public delegate void PFNGLPROGRAMUNIFORM2DVPROC(uint program, int location, int count, ref double value);
        public delegate void PFNGLPROGRAMUNIFORM2UIPROC(uint program, int location, uint v0, uint v1);
        public delegate void PFNGLPROGRAMUNIFORM2UIVPROC(uint program, int location, int count, ref uint value);
        public delegate void PFNGLPROGRAMUNIFORM3IPROC(uint program, int location, int v0, int v1, int v2);
        public delegate void PFNGLPROGRAMUNIFORM3IVPROC(uint program, int location, int count, ref int value);
        public delegate void PFNGLPROGRAMUNIFORM3FPROC(uint program, int location, float v0, float v1, float v2);
        public delegate void PFNGLPROGRAMUNIFORM3FVPROC(uint program, int location, int count, ref float value);
        public delegate void PFNGLPROGRAMUNIFORM3DPROC(uint program, int location, double v0, double v1, double v2);
        public delegate void PFNGLPROGRAMUNIFORM3DVPROC(uint program, int location, int count, ref double value);
        public delegate void PFNGLPROGRAMUNIFORM3UIPROC(uint program, int location, uint v0, uint v1, uint v2);
        public delegate void PFNGLPROGRAMUNIFORM3UIVPROC(uint program, int location, int count, ref uint value);
        public delegate void PFNGLPROGRAMUNIFORM4IPROC(uint program, int location, int v0, int v1, int v2, int v3);
        public delegate void PFNGLPROGRAMUNIFORM4IVPROC(uint program, int location, int count, ref int value);
        public delegate void PFNGLPROGRAMUNIFORM4FPROC(uint program, int location, float v0, float v1, float v2, float v3);
        public delegate void PFNGLPROGRAMUNIFORM4FVPROC(uint program, int location, int count, ref float value);
        public delegate void PFNGLPROGRAMUNIFORM4DPROC(uint program, int location, double v0, double v1, double v2, double v3);
        public delegate void PFNGLPROGRAMUNIFORM4DVPROC(uint program, int location, int count, ref double value);
        public delegate void PFNGLPROGRAMUNIFORM4UIPROC(uint program, int location, uint v0, uint v1, uint v2, uint v3);
        public delegate void PFNGLPROGRAMUNIFORM4UIVPROC(uint program, int location, int count, ref uint value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC(uint program, int location, int count, byte transpose, ref float value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC(uint program, int location, int count, byte transpose, ref double value);
        public delegate void PFNGLVALIDATEPROGRAMPIPELINEPROC(uint pipeline);
        public delegate void PFNGLGETPROGRAMPIPELINEINFOLOGPROC(uint pipeline, int bufSize, ref int length, IntPtr infoLog);
        public delegate void PFNGLVERTEXATTRIBL1DPROC(uint index, double x);
        public delegate void PFNGLVERTEXATTRIBL2DPROC(uint index, double x, double y);
        public delegate void PFNGLVERTEXATTRIBL3DPROC(uint index, double x, double y, double z);
        public delegate void PFNGLVERTEXATTRIBL4DPROC(uint index, double x, double y, double z, double w);
        public delegate void PFNGLVERTEXATTRIBL1DVPROC(uint index, ref double v);
        public delegate void PFNGLVERTEXATTRIBL2DVPROC(uint index, ref double v);
        public delegate void PFNGLVERTEXATTRIBL3DVPROC(uint index, ref double v);
        public delegate void PFNGLVERTEXATTRIBL4DVPROC(uint index, ref double v);
        public delegate void PFNGLVERTEXATTRIBLPOINTERPROC(uint index, int size, uint type, int stride, IntPtr pointer);
        public delegate void PFNGLGETVERTEXATTRIBLDVPROC(uint index, uint pname, ref double parameters);
        public delegate void PFNGLVIEWPORTARRAYVPROC(uint first, int count, ref float v);
        public delegate void PFNGLVIEWPORTINDEXEDFPROC(uint index, float x, float y, float w, float h);
        public delegate void PFNGLVIEWPORTINDEXEDFVPROC(uint index, ref float v);
        public delegate void PFNGLSCISSORARRAYVPROC(uint first, int count, ref int v);
        public delegate void PFNGLSCISSORINDEXEDPROC(uint index, int left, int bottom, int width, int height);
        public delegate void PFNGLSCISSORINDEXEDVPROC(uint index, ref int v);
        public delegate void PFNGLDEPTHRANGEARRAYVPROC(uint first, int count, ref double v);
        public delegate void PFNGLDEPTHRANGEINDEXEDPROC(uint index, double n, double f);
        public delegate void PFNGLGETFLOATI_VPROC(uint target, uint index, ref float data);
        public delegate void PFNGLGETDOUBLEI_VPROC(uint target, uint index, ref double data);
        #endregion

        #region Methods
#pragma warning disable 0649
        public static PFNGLRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
        public static PFNGLSHADERBINARYPROC glShaderBinary;
        public static PFNGLGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
        public static PFNGLDEPTHRANGEFPROC glDepthRangef;
        public static PFNGLCLEARDEPTHFPROC glClearDepthf;
        public static PFNGLGETPROGRAMBINARYPROC glGetProgramBinary;
        public static PFNGLPROGRAMBINARYPROC glProgramBinary;
        public static PFNGLPROGRAMPARAMETERIPROC glProgramParameteri;
        public static PFNGLUSEPROGRAMSTAGESPROC glUseProgramStages;
        public static PFNGLACTIVESHADERPROGRAMPROC glActiveShaderProgram;
        public static PFNGLCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
        public static PFNGLBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
        public static PFNGLDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
        public static PFNGLGENPROGRAMPIPELINESPROC glGenProgramPipelines;
        public static PFNGLISPROGRAMPIPELINEPROC glIsProgramPipeline;
        public static PFNGLGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
        public static PFNGLPROGRAMUNIFORM1IPROC glProgramUniform1i;
        public static PFNGLPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
        public static PFNGLPROGRAMUNIFORM1FPROC glProgramUniform1f;
        public static PFNGLPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
        public static PFNGLPROGRAMUNIFORM1DPROC glProgramUniform1d;
        public static PFNGLPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
        public static PFNGLPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
        public static PFNGLPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
        public static PFNGLPROGRAMUNIFORM2IPROC glProgramUniform2i;
        public static PFNGLPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
        public static PFNGLPROGRAMUNIFORM2FPROC glProgramUniform2f;
        public static PFNGLPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
        public static PFNGLPROGRAMUNIFORM2DPROC glProgramUniform2d;
        public static PFNGLPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
        public static PFNGLPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
        public static PFNGLPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
        public static PFNGLPROGRAMUNIFORM3IPROC glProgramUniform3i;
        public static PFNGLPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
        public static PFNGLPROGRAMUNIFORM3FPROC glProgramUniform3f;
        public static PFNGLPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
        public static PFNGLPROGRAMUNIFORM3DPROC glProgramUniform3d;
        public static PFNGLPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
        public static PFNGLPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
        public static PFNGLPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
        public static PFNGLPROGRAMUNIFORM4IPROC glProgramUniform4i;
        public static PFNGLPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
        public static PFNGLPROGRAMUNIFORM4FPROC glProgramUniform4f;
        public static PFNGLPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
        public static PFNGLPROGRAMUNIFORM4DPROC glProgramUniform4d;
        public static PFNGLPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
        public static PFNGLPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
        public static PFNGLPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
        public static PFNGLPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
        public static PFNGLPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
        public static PFNGLPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
        public static PFNGLPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
        public static PFNGLPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
        public static PFNGLPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
        public static PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
        public static PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
        public static PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
        public static PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
        public static PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
        public static PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
        public static PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
        public static PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
        public static PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
        public static PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
        public static PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
        public static PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
        public static PFNGLVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
        public static PFNGLGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
        public static PFNGLVERTEXATTRIBL1DPROC glVertexAttribL1d;
        public static PFNGLVERTEXATTRIBL2DPROC glVertexAttribL2d;
        public static PFNGLVERTEXATTRIBL3DPROC glVertexAttribL3d;
        public static PFNGLVERTEXATTRIBL4DPROC glVertexAttribL4d;
        public static PFNGLVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
        public static PFNGLVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
        public static PFNGLVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
        public static PFNGLVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
        public static PFNGLVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
        public static PFNGLGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
        public static PFNGLVIEWPORTARRAYVPROC glViewportArrayv;
        public static PFNGLVIEWPORTINDEXEDFPROC glViewportIndexedf;
        public static PFNGLVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
        public static PFNGLSCISSORARRAYVPROC glScissorArrayv;
        public static PFNGLSCISSORINDEXEDPROC glScissorIndexed;
        public static PFNGLSCISSORINDEXEDVPROC glScissorIndexedv;
        public static PFNGLDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
        public static PFNGLDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
        public static PFNGLGETFLOATI_VPROC glGetFloati_v;
        public static PFNGLGETDOUBLEI_VPROC glGetDoublei_v;
        #endregion
    }
}
