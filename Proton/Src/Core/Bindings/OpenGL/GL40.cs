using System;
using System.Runtime.InteropServices;

namespace Proton
{
	static class GL40
	{
		#region Constants
		public const uint GL_SAMPLE_SHADING = 35894;
		public const uint GL_MIN_SAMPLE_SHADING_VALUE = 35895;
		public const uint GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 36446;
		public const uint GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 36447;
		public const uint GL_TEXTURE_CUBE_MAP_ARRAY = 36873;
		public const uint GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 36874;
		public const uint GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 36875;
		public const uint GL_SAMPLER_CUBE_MAP_ARRAY = 36876;
		public const uint GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 36877;
		public const uint GL_INT_SAMPLER_CUBE_MAP_ARRAY = 36878;
		public const uint GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 36879;
		public const uint GL_DRAW_INDIRECT_BUFFER = 36671;
		public const uint GL_DRAW_INDIRECT_BUFFER_BINDING = 36675;
		public const uint GL_GEOMETRY_SHADER_INVOCATIONS = 34943;
		public const uint GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 36442;
		public const uint GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 36443;
		public const uint GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 36444;
		public const uint GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 36445;
		public const uint GL_MAX_VERTEX_STREAMS = 36465;
		public const uint GL_DOUBLE_VEC2 = 36860;
		public const uint GL_DOUBLE_VEC3 = 36861;
		public const uint GL_DOUBLE_VEC4 = 36862;
		public const uint GL_DOUBLE_MAT2 = 36678;
		public const uint GL_DOUBLE_MAT3 = 36679;
		public const uint GL_DOUBLE_MAT4 = 36680;
		public const uint GL_DOUBLE_MAT2x3 = 36681;
		public const uint GL_DOUBLE_MAT2x4 = 36682;
		public const uint GL_DOUBLE_MAT3x2 = 36683;
		public const uint GL_DOUBLE_MAT3x4 = 36684;
		public const uint GL_DOUBLE_MAT4x2 = 36685;
		public const uint GL_DOUBLE_MAT4x3 = 36686;
		public const uint GL_ACTIVE_SUBROUTINES = 36325;
		public const uint GL_ACTIVE_SUBROUTINE_UNIFORMS = 36326;
		public const uint GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 36423;
		public const uint GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 36424;
		public const uint GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 36425;
		public const uint GL_MAX_SUBROUTINES = 36327;
		public const uint GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 36328;
		public const uint GL_NUM_COMPATIBLE_SUBROUTINES = 36426;
		public const uint GL_COMPATIBLE_SUBROUTINES = 36427;
		public const uint GL_PATCHES = 14;
		public const uint GL_PATCH_VERTICES = 36466;
		public const uint GL_PATCH_DEFAULT_INNER_LEVEL = 36467;
		public const uint GL_PATCH_DEFAULT_OUTER_LEVEL = 36468;
		public const uint GL_TESS_CONTROL_OUTPUT_VERTICES = 36469;
		public const uint GL_TESS_GEN_MODE = 36470;
		public const uint GL_TESS_GEN_SPACING = 36471;
		public const uint GL_TESS_GEN_VERTEX_ORDER = 36472;
		public const uint GL_TESS_GEN_POINT_MODE = 36473;
		public const uint GL_ISOLINES = 36474;
		public const uint GL_FRACTIONAL_ODD = 36475;
		public const uint GL_FRACTIONAL_EVEN = 36476;
		public const uint GL_MAX_PATCH_VERTICES = 36477;
		public const uint GL_MAX_TESS_GEN_LEVEL = 36478;
		public const uint GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 36479;
		public const uint GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 36480;
		public const uint GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 36481;
		public const uint GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 36482;
		public const uint GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 36483;
		public const uint GL_MAX_TESS_PATCH_COMPONENTS = 36484;
		public const uint GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 36485;
		public const uint GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 36486;
		public const uint GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 36489;
		public const uint GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 36490;
		public const uint GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 34924;
		public const uint GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 34925;
		public const uint GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 36382;
		public const uint GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 36383;
		public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 34032;
		public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 34033;
		public const uint GL_TESS_EVALUATION_SHADER = 36487;
		public const uint GL_TESS_CONTROL_SHADER = 36488;
		public const uint GL_TRANSFORM_FEEDBACK = 36386;
		public const uint GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 36387;
		public const uint GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 36388;
		public const uint GL_TRANSFORM_FEEDBACK_BINDING = 36389;
		public const uint GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 36464;
		#endregion

		#region Delegates
		public delegate void PFNGLMINSAMPLESHADINGPROC(float value);
		public delegate void PFNGLBLENDEQUATIONIPROC(uint buf, uint mode);
		public delegate void PFNGLBLENDEQUATIONSEPARATEIPROC(uint buf, uint modeRGB, uint modeAlpha);
		public delegate void PFNGLBLENDFUNCIPROC(uint buf, uint src, uint dst);
		public delegate void PFNGLBLENDFUNCSEPARATEIPROC(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);
		public delegate void PFNGLDRAWARRAYSINDIRECTPROC(uint mode, IntPtr indirect);
		public delegate void PFNGLDRAWELEMENTSINDIRECTPROC(uint mode, uint type, IntPtr indirect);
		public delegate void PFNGLUNIFORM1DPROC(int location, double x);
		public delegate void PFNGLUNIFORM2DPROC(int location, double x, double y);
		public delegate void PFNGLUNIFORM3DPROC(int location, double x, double y, double z);
		public delegate void PFNGLUNIFORM4DPROC(int location, double x, double y, double z, double w);
		public delegate void PFNGLUNIFORM1DVPROC(int location, int count, ref double value);
		public delegate void PFNGLUNIFORM2DVPROC(int location, int count, ref double value);
		public delegate void PFNGLUNIFORM3DVPROC(int location, int count, ref double value);
		public delegate void PFNGLUNIFORM4DVPROC(int location, int count, ref double value);
		public delegate void PFNGLUNIFORMMATRIX2DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX3DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX4DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX2X3DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX2X4DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX3X2DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX3X4DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX4X2DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLUNIFORMMATRIX4X3DVPROC(int location, int count, byte transpose, ref double value);
		public delegate void PFNGLGETUNIFORMDVPROC(uint program, int location, ref double parameters);
		public delegate int PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC(uint program, uint shadertype, [In] [MarshalAs(UnmanagedType.LPStr)] string name);
		public delegate uint PFNGLGETSUBROUTINEINDEXPROC(uint program, uint shadertype, [In] [MarshalAs(UnmanagedType.LPStr)] string name);
		public delegate void PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC(uint program, uint shadertype, uint index, uint pname, ref int values);
		public delegate void PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC(uint program, uint shadertype, uint index, int bufsize, ref int length, IntPtr name);
		public delegate void PFNGLGETACTIVESUBROUTINENAMEPROC(uint program, uint shadertype, uint index, int bufsize, ref int length, IntPtr name);
		public delegate void PFNGLUNIFORMSUBROUTINESUIVPROC(uint shadertype, int count, ref uint indices);
		public delegate void PFNGLGETUNIFORMSUBROUTINEUIVPROC(uint shadertype, int location, ref uint parameters);
		public delegate void PFNGLGETPROGRAMSTAGEIVPROC(uint program, uint shadertype, uint pname, ref int values);
		public delegate void PFNGLPATCHPARAMETERIPROC(uint pname, int value);
		public delegate void PFNGLPATCHPARAMETERFVPROC(uint pname, ref float values);
		public delegate void PFNGLBINDTRANSFORMFEEDBACKPROC(uint target, uint id);
		public delegate void PFNGLDELETETRANSFORMFEEDBACKSPROC(int n, ref uint ids);
		public delegate void PFNGLGENTRANSFORMFEEDBACKSPROC(int n, ref uint ids);
		public delegate byte PFNGLISTRANSFORMFEEDBACKPROC(uint id);
		public delegate void PFNGLPAUSETRANSFORMFEEDBACKPROC();
		public delegate void PFNGLRESUMETRANSFORMFEEDBACKPROC();
		public delegate void PFNGLDRAWTRANSFORMFEEDBACKPROC(uint mode, uint id);
		public delegate void PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC(uint mode, uint id, uint stream);
		public delegate void PFNGLBEGINQUERYINDEXEDPROC(uint target, uint index, uint id);
		public delegate void PFNGLENDQUERYINDEXEDPROC(uint target, uint index);
		public delegate void PFNGLGETQUERYINDEXEDIVPROC(uint target, uint index, uint pname, ref int parameters);
		#endregion

		#region Methods
		public static PFNGLMINSAMPLESHADINGPROC glMinSampleShading;
		public static PFNGLBLENDEQUATIONIPROC glBlendEquationi;
		public static PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
		public static PFNGLBLENDFUNCIPROC glBlendFunci;
		public static PFNGLBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
		public static PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
		public static PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
		public static PFNGLUNIFORM1DPROC glUniform1d;
		public static PFNGLUNIFORM2DPROC glUniform2d;
		public static PFNGLUNIFORM3DPROC glUniform3d;
		public static PFNGLUNIFORM4DPROC glUniform4d;
		public static PFNGLUNIFORM1DVPROC glUniform1dv;
		public static PFNGLUNIFORM2DVPROC glUniform2dv;
		public static PFNGLUNIFORM3DVPROC glUniform3dv;
		public static PFNGLUNIFORM4DVPROC glUniform4dv;
		public static PFNGLUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
		public static PFNGLUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
		public static PFNGLUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
		public static PFNGLUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
		public static PFNGLUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
		public static PFNGLUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
		public static PFNGLUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
		public static PFNGLUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
		public static PFNGLUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
		public static PFNGLGETUNIFORMDVPROC glGetUniformdv;
		public static PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
		public static PFNGLGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
		public static PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
		public static PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
		public static PFNGLGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
		public static PFNGLUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
		public static PFNGLGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
		public static PFNGLGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
		public static PFNGLPATCHPARAMETERIPROC glPatchParameteri;
		public static PFNGLPATCHPARAMETERFVPROC glPatchParameterfv;
		public static PFNGLBINDTRANSFORMFEEDBACKPROC glBindTransformFeedback;
		public static PFNGLDELETETRANSFORMFEEDBACKSPROC glDeleteTransformFeedbacks;
		public static PFNGLGENTRANSFORMFEEDBACKSPROC glGenTransformFeedbacks;
		public static PFNGLISTRANSFORMFEEDBACKPROC glIsTransformFeedback;
		public static PFNGLPAUSETRANSFORMFEEDBACKPROC glPauseTransformFeedback;
		public static PFNGLRESUMETRANSFORMFEEDBACKPROC glResumeTransformFeedback;
		public static PFNGLDRAWTRANSFORMFEEDBACKPROC glDrawTransformFeedback;
		public static PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glDrawTransformFeedbackStream;
		public static PFNGLBEGINQUERYINDEXEDPROC glBeginQueryIndexed;
		public static PFNGLENDQUERYINDEXEDPROC glEndQueryIndexed;
		public static PFNGLGETQUERYINDEXEDIVPROC glGetQueryIndexediv;
		#endregion
	}
}
